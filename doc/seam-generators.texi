Enblend at this time supports two main algorithms to generate seam lines:

@enumerate
@item
Nearest Feature Transform
@item
Graph-Cut
@end enumerate

@cindex seam generation
@cindex seam, algorithm
@cindex graphcut, @acronym{NFT}

Algorithm number 1 is the original seam generator developed by
@sc{Andrew Mihal}. It is a fast and efficient technique of
producing an accurate approximation of the required seam line route.

Algorithm number 2 is a seam generator based on the idea of finding
a minimum cost "cut" of a graph created out of a given image pair. A "cut"
is essentially where the seam line appears.

@cindex graphcut details
@cindex seam generation details
@cindex seam algorithm details
The most significant difference between the two algorithms is the output
mask gradation. @acronym{NFT} produces a coarse approximation of the seam,
running as far away from the overlap region borders as possible. The mask 
can then be blended as-is, but usually additional optimizers are run to 
increase the mask gradation and omit the regions where the images greatly 
differ. The outcome is a fine seam line that loosely follows the shape
of the approximated seam.

Graph-Cut, on the other hand, is capable of producing a complete mask.
It looks for a seam line that is @emph{globally} best. This takes into
account feature frequency, as well as image dissimilarity. This means
the seam is less likely to cross lines, fences etc. where it would be 
visible. The optimizers which run after @acronym{NFT} can also be run 
after Graph-Cut. Nevertheless, Graph-Cut works best with a fine mask 
(@option{--fine-mask}). Optimizers are then automatically turned off 
to take advantage of the detailed seam Graph-Cut produces.

Graph-Cut requires more memory and time to complete than Nearest Feature
Transform (without taking seam-line optimizers into account, as they run
equally as fast for both algorithms). Knowing this fact, it is best to
use @acronym{NFT} where the images used are large and execution time is
crucial. If quality is the priority, Graph-Cut using a fine mask usually 
produces better results.

@cindex graphcut, limitations
Graph-Cut is currently limited to seams that begin and end on the image 
borders. This means that it does not run in cases where, for example, 
one image is contained in another one, resulting in a ring-like seam. 
In such cases, though, it outputs a Nearest Feature Transform seam, 
making it transparent to the user. It can therefore be safely used 
with any image set.

