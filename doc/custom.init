# -*- cperl -*-

$ICONS = 1;

$T2H_LANG = "en";
$T2H_DOCTYPE = q(<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
  "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd">);

$EXTRA_HEAD = q(
<style type="text/css">
    /* Settings for generic elements */
    body {
        margin-left: 6%;
        margin-right: 6%
    }
    h1, h2, h3, h4, h5, h6 {margin-left: -4%}

    dl, h1, h2, h3, h4, h5, h6, ol, p, table, ul {font-family: sans-serif}
    code, pre {font-family: monospace}
    var {
        font-family: sans-serif;
        font-style: italic
    }

    /* Class- and attibute based settings */
    div.contents {}
    div.float {}

    dl.compact {}
    dl.listoffloats {}

    h1.chapter {}
    h1.settitle {}
    h1.unnumbered {}
    h2.section {}
    h3.subsection {}
    h4.subsubsection {}

    hr.small {
        background-color: black;
        color: black;
        height: 1px;
        width: 113%
    }
    hr.middle {
        background-color: black;
        color: black;
        height: 2px;
        width: 113%
    }
    hr.big {
        background-color: black;
        color: black;
        height: 4px;
        width: 113%
    }

    math {display: block}
    math[display=inline] {display: inline}

    pre.example {}
    pre.menu-comment {
        font-family: sans-serif;
        font-size: 120%;
        font-weight: bold;
        margin-top: 2ex;
    }

    small.enddots {}

    table.index-cp {}
    table.index-op {}
    table.index-pg {}
    table.menu {}

    ul.toc {}
</style>
);

$DEFAULT_RULE = '<hr/>';
$SMALL_RULE = '<hr class="small"/>';
$MIDDLE_RULE = '<hr class="middle"/>';
$BIG_RULE = '<hr class="big"/>';


my $image_dir = q(/usr/share/texi2html/images);
%ACTIVE_ICONS =
    (Top =>         "$image_dir/a_top.png",
     Contents =>    "$image_dir/a_tableofcon.png",
     Overview =>    "",
     Index =>       "$image_dir/a_index.png",
     This =>        "",
     Back =>        "$image_dir/a_left.png",
     FastBack =>    "$image_dir/a_leftdouble.png",
     Prev =>        "",
     Up =>          "$image_dir/a_up.png",
     Next =>        "",
     NodeUp =>      "",
     NodeNext =>    "",
     NodePrev =>    "",
     Following =>   "",
     Forward =>     "$image_dir/a_right.png",
     FastForward => "$image_dir/a_rightdouble.png",
     About =>       "$image_dir/a_help.png",
     First =>       "$image_dir/a_begin.png",
     Last =>        "$image_dir/a_end.png",
     ' ',           "");

%PASSIVE_ICONS =
    (Top =>         "$image_dir/a_top_na.png",
     Contents =>    "$image_dir/a_tableofcon_na.png",
     Overview =>    "",
     Index =>       "$image_dir/a_index_na.png",
     This =>        "",
     Back =>        "$image_dir/a_left_na.png",
     FastBack =>    "$image_dir/a_leftdouble_na.png",
     Prev =>        "",
     Up =>          "$image_dir/a_up_na.png",
     Next =>        "",
     NodeUp =>      "",
     NodeNext =>    "",
     NodePrev =>    "",
     Following =>   "",
     Forward =>     "$image_dir/a_right_na.png",
     FastForward => "$image_dir/a_rightdouble_na.png",
     About =>       "$image_dir/a_help_na.png",
     First =>       "$image_dir/a_begin_na.png",
     Last =>        "$image_dir/a_end_na.png");


#$css_map{'ul.toc'} = "list-style: disc";

$format_map{table} = 'dl class="compact"';
$format_map{vtable} = 'dl class="compact"';
$format_map{ftable} = 'dl class="compact"';

$pre_map{'geq'} = '&gt;=';
$pre_map{'leq'} = '&lt;=';
$pre_map{'textdegree'} = 'o';

$things_map{'geq'} = '&geq;';
$things_map{'leq'} = '&leq;';
$things_map{'textdegree'} = '&deg;';


sub custom_anchor {
    my ($name, $href, $text) = @_;

    my $name_attr = '';
    my $href_attr = '';

    $name_attr = qq{ id="$name"} if $name;
    $href_attr = qq{ href="$href"} if $href;

    if ($text) {
        return qq{<a$name_attr$href_attr>$text</a>};
    } else {
        return qq{<a$name_attr$href_attr/>};
    }
}
$anchor = \&custom_anchor;


sub custom_button_icon_img {
    my ($button, $icon, $name) = @_;

    my $name = '';

    return '' if (!defined($icon));
    $name = ": $name" if (defined($name) && $name);
    $button = "" if (!defined ($button));
    return qq{<img src="$icon" alt="$button$name"/>};
}
$button_icon_img = \&custom_button_icon_img;
