This is ../../doc/enfuse.info, produced by makeinfo version 4.11 from
../../doc/enfuse.texi.

This manual is for Enfuse (version 3.2-staging-3ea737bf43e5, 14 April
2009), a program to merge different exposures of the same scene to
produce an image that looks much like a tonemapped image.

   Copyright (C) 2004-2009 ANDREW MIHAL.

     Permission is granted to copy, distribute and/or modify this
     document under the terms of the GNU Free Documentation License,
     Version 1.2 or any later version published by the Free Software
     Foundation; with no Invariant Sections, no Front-Cover Texts and no
     Back-Cover Texts.  A copy of the license is included in the section
     entitled "GNU Free Documentation License".


File: enfuse.info,  Node: Top,  Next: Overview,  Up: (dir)

Enfuse
******

This manual is for Enfuse (version 3.2-staging-3ea737bf43e5, 14 April
2009), a program to merge different exposures of the same scene to
produce an image that looks much like a tonemapped image.

* Menu:

* Overview::                    Overview of Enfuse's features
* Workflow::                    Enfuse's role in combining images
* Invocation::                  Command line options and arguments
* Weighting Functions::         Description of all weighting functions
* Understanding Masks::         How to interpret masks and `mask####.tif' files
* Tuning Memory Usage::         Balancing RAM and swap
* Applications::                Possible applications of Enfuse
* Helpful Programs::            Useful other programs
* Authors::                     Major contributors
* FDL::                         GNU Free Documentation License
* List of Tables::              List of all tables
* List of Figures::             List of all figures
* Program Index::               Names of programs referenced
* Option Index::                Index of all options
* General Index::               Topic index


--- The Detailed Node Listing ---

Overview

Workflow

Invocation

* Common Options::              General options
* Extended Options::            Memory control and others
* Fusion Options::              Image fusion control
* Expert Options::              Contrast and entropy selection configuration
* Option Delimiters::           How to separate options' arguments

Weighting Functions

* Weighting Pixels::            General concept of weighting pixels
* Exposure Weighting::          Weighting by exposure
* Saturation Weighting::        Weighting by saturation
* Contrast Weighting::          Weighting by local contrast
* Entropy Weighting::           Weighting by local entropy

Weighting Algorithms

* Weighted Average::            Enfuse's default weighting algorithm
* Disabling Averaging::         ``Super Trouper'' weighting for focus stacks

Contrast Weighting

* Standard Deviation::          Standard deviation (SDev) in a square of pixels
* Laplacian of Gaussian::       LoG, a second derivative method
* Blend SDev and LoG::          Mix both methods
* Scaling and Choice of Mode::  How parameters do not scale; neither does mode

Understanding Masks

Tuning Memory Usage

Applications

* What Images::                 What makes images fusable?
* Repetition::                  Just taking the same shot multiple times
* Exposure Series::             Varying the exposure time
* Flash Exposure Series::       Varying the flash output
* Polarization Series::         Changing the polarizer angle
* Focus Stacks::                Stacking images with different in-focus distance

Exposure Series

* Exposure Series Tips::            Some hints for beginners
* Exposure Series Misconceptions::  What works despite the hype

Focus Stacks

* Why Focus Stacks::            Why take the hassle?
* Preparing Focus Stacks::      How to get suitable input images
* Contrast Based Fusing::       Fundamental command line options
* Basic Focus Stacking::        Simple, standard deviation method
* Advanced Focus Stacking::     Advanced, Laplacian technique
* Expert Stacking::             Tips for focus stacking experts

Advanced Focus Stacking

* Local Contrast Problem::        What is the problem Kenneth?
* Laplacian Edge Detection::      Using a Laplacian-of-Gaussian to detect edges
* Local Contrast Enhancement::    Boosting local contrast before weighting
* Suppressing Noise or Recognizing Faint Edges::  The best of both worlds
* Focus Stacking Decision Tree::  What to do and how to fuse

Helpful Programs

Authors

FDL


File: enfuse.info,  Node: Overview,  Next: Workflow,  Prev: Top,  Up: Top

1 Overview
**********

Enfuse merges overlapping images using the MERTENS-KAUTZ-VAN REETH
exposure fusion algorithm.(1)  This is a quick way for example to blend
differently exposed images into a nice output image, without producing
intermediate high-dynamic range (HDR) images that are then tonemapped
to a viewable image.  This simplified process often works much better
than tonemapping algorithms.

   Enfuse can also be used to build extended depth-of-field (DOF)
images by blending a focus stack.

   The idea is that pixels in the input images are weighted according to
qualities such as, for example, proper exposure, good contrast, or high
saturation.  These weights determine how much a given pixel will
contribute to the final image.

   A BURT-ADELSON multiresolution spline blender(2) is used to combine
the images according to the weights.  The multiresolution blending
ensures that transitions between regions where different images
contribute are difficult to spot.

   Enfuse uses up to four criteria to judge the quality of a pixel,
which *note Table:weighting-criteria:: briefly describes.

Exposure
     The exposure criteria favors pixels with luminance close to the
     middle of the range.  These pixels are considered better exposed
     as those with high or low luminance levels.

Saturation
     The saturation criteria favors highly-saturated pixels.  (Note that
     saturation is only defined for color pixels.)

Contrast
     The contrast criteria favors pixels inside a high-contrast
     neighborhood.  Enfuse can use standard deviation or Laplacian
     magnitude or a blend of both as local contrast measure.

Entropy
     The entropy criteria prefers pixels inside a high-entropy
     neighborhood.  In addition, Enfuse allows the user to mitigate the
     problem of noisy images when using entropy weighting by setting a
     black threshold.

Table 1.1: Enfuse's four weighting criteria.

   For the concept of pixel weighting and details on the different
weighting functions see *note Weighting Functions::.

   Adjust how much importance is given to each criterion by setting the
weight parameters on the command line.  For example, if you set
`--wExposure=1.0' and `--wSaturation=0.5', Enfuse will favor
well-exposed pixels over highly-saturated pixels when blending the
source images.  The effect of these parameters on the final result will
not always be clear in advance.  The quality of the result is subject
to your artistic interpretation.  Playing with the weights may or may
not give a more pleasing result.  The authors encourage you to
experiment, perhaps using down-sized(3) or cropped images for speed.

   Enfuse expects but does not require each input image to have an alpha
channel.  By setting the alpha values of pixels to zero, users can
manually remove those pixels from consideration when blending.  If an
input image lacks an alpha channel, Enfuse will issue a warning and
continue assuming all pixels should contribute to the final output.
Any alpha value other than zero is interpreted as "this pixel should
contribute to the final image".

   Find out more about Enfuse on its web page
(http://enblend.sourceforge.net/).

   ---------- Footnotes ----------

   (1) Tom Mertens, Jan Kautz, and Frank van Reeth, "Exposure Fusion",
Proceedings of the 15th Pacific Conference on Computer Graphics and
Applications, pages 382-390.

   (2) Peter J. Burt and Edward H. Adelson, "A Multiresolution Spline
With Application to Image Mosaics", ACM Transactions on Graphics, Vol.
2, No. 4, October 1983, pages 217-236.

   (3) Downsampling with a good interpolator reduces noise, which might
not desired to judge the image quality of the original-size image.
Cropping might be an alternative, though.


File: enfuse.info,  Node: Workflow,  Next: Invocation,  Prev: Overview,  Up: Top

2 Workflow
**********

Enblend and Enfuse are parts of a chain of tools to assemble images.

   * Enblend combines a series of pictures taken at the same location
     but in different directions.

   * Enfuse merges photos of the same subject at the same location and
     same direction, but taken with varying exposure parameters.

*note Figure:photographic-workflow:: shows where Enblend and Enfuse sit
in this tool chain.

 [image src="photographic-workflow.png" ]

Figure 2.1: Photographic workflow with Enblend and Enfuse.

Take Images
     Take _multiple_ images for form a panorama, an exposure series, a
     focus stack, etc.

          There is one exception with Enfuse when a single raw image is
          converted multiple times to get several - typically differently
          "exposed" - images.

     _Exemplary Benefits_
        * Many pictures taken from the same vantage point but showing
          different viewing directions.  - Panorama

        * Pictures of the same subject exposed with different shutter
          speeds.  - Exposure series

        * Images of the same subject focussed at differing distances.
          - Focus stack

     _Remaining Problem:_ The "overlayed" images may not fit together,
     this is the overlay regions may not match exactly.

Convert Images
     Convert the raw data
     (http://www.luminous-landscape.com/tutorials/understanding-series/u-raw-files.shtml)
     exploiting the full dynamic range of the camera and capitalize on
     a high-quality conversion.

Align Images
     Align the images so as to make them match as well as possible.

          Again there is one exception and this is when images naturally align.
          For example, a series of images taken from a rock solid tripod with a
          cable release without touching the camera or images taken with a shift
          lens can align without further user intervention.

     This step submits the images to affine transformations.  If
     necessary it rectifies the lens' distortions (e.g. barrel or
     pincushion), too.  Sometimes even luminance or color differences
     between pairs of overlaying images are corrected ("photometric
     alignment").

     _Benefit:_ The overlay areas of images match as closely as
     possible given the quality if the input images and the lens model
     used in the transformation.

     _Remaining Problem:_ The images may still not align perfectly, for
     example, because of parallax
     (http://en.wikipedia.org/wiki/Parallax) errors or blur produced by
     camera shake.

Combine Images
     Enblend and Enfuse combine the aligned images into one.

     _Benefit:_ The overlay areas become imperceptible for all but the
     most mal-aligned images.

     _Remaining Problem:_ Enblend and Enfuse write images with an alpha
     channel.  (For more information on alpha channels see *note
     Understanding Masks::.)  Furthermore, the final image rarely is
     rectangular.

Postprocess
     Postprocess the combined image with your favorite tool.  Often the
     user will want to crop the image and simultaneously throw away the
     alpha channel.

View

Print

Enjoy


File: enfuse.info,  Node: Invocation,  Next: Weighting Functions,  Prev: Workflow,  Up: Top

3 Invocation
************

`enfuse' [OPTIONS] [`--output='IMAGE] INPUT...

Fuse the sequence of images INPUT... into a single IMAGE.

* Menu:

* Common Options::              General options
* Extended Options::            Memory control and others
* Fusion Options::              Image fusion control
* Expert Options::              Contrast and entropy selection configuration
* Option Delimiters::           How to separate options' arguments


File: enfuse.info,  Node: Common Options,  Next: Extended Options,  Up: Invocation

3.1 Common Options
==================

Common options control some overall features of Enfuse.

`--compression=COMPRESSION'
     Write a compressed output file.

     Depending on the output file format Enfuse accepts different values
     for COMPRESSION.

    JPEG
          COMPRESSION is a JPEG quality level ranging from 0-100.

    TIFF
          COMPRESSION is one of the keywords:
         `NONE'
               Do not compress.  This is the default.

         `DEFLATE'
               Use the Deflate compression scheme also called
               ZIP-in-TIFF.  Deflate is a lossless data compression
               algorithm that uses a combination of the LZ77 algorithm
               and HUFFMAN coding.

         `LZW'
               Use LEMPEL-ZIV-WELCH (LZW) adaptive compression scheme.
               LZW compression is lossless.

         `PACKBITS'
               Use PackBits compression scheme.  PackBits is a
               particular variant of run-length compression; it is
               lossless.

    Any other format
          Other formats do not accept a COMPRESSION setting.

          However, VIGRA (http://hci.iwr.uni-heidelberg.de/vigra/)
          automatically compresses `png'-files with the "deflate"
          method.

`-h'
`--help'
     Print information on the available options then exit.

`-l LEVELS'
     Use exactly this many LEVELS for pyramid (1) blending.

     This option allows to trade off quality of results for slightly
     shorter execution time and lower memory usage.  The default is to
     use as many levels as possible given the size of the overlap
     region.  Enfuse may still use a smaller number of levels if the
     geometry of the images demands it.

`-o'
`--output=FILE'
     Place output in FILE.

     If `--output' is not specified, the default is to put the
     resulting image in `a.tif'.

`-v'
`--verbose'
     Increase the verbosity of progress reporting.  Giving one or more
     `--verbos' options will make Enfuse more verbose.

`-V'
`--version'
     Output information on the Enfuse version.

     Team this option with `--verbose' to inquire configuration details
     like the extra features that have been compiled in.

`-w'
     Blend around the +/-180o boundary.  This is useful for full 360o
     panoramas.

     Version 3.2-staging-3ea737bf43e5 of Enfuse, the one described
     here, does not blend neither zenith nor or nadir, so you may still
     see some seams in these areas.

   ---------- Footnotes ----------

   (1) As Dr. Daniel Jackson correctly noted
(http://stargate.wikia.com/wiki/The_Tomb), actually, it is not a
pyramid: "Ziggaurat, it's a Ziggaurat
(http://en.wikipedia.org/wiki/Ziggaurat).


File: enfuse.info,  Node: Extended Options,  Next: Fusion Options,  Prev: Common Options,  Up: Invocation

3.2 Extended Options
====================

Extended options control the image cache, the color model, and the
cropping of the output image.

`-b BLOCKSIZE'
     Set the BLOCKSIZE in kilobytes (KB) of Enfuse's image cache.

     This is the amount of data that Enfuse will move to and from the
     disk in one go.  The default is 2048KB, which should be ok for most
     systems.

     See *note Tuning Memory Usage:: for details.

`-c'
     Use the CIECAM02 color appearance model for blending colors.

     The input files should have embedded ICC profiles when this option
     is specified.  If no ICC profile is present, Enfuse will assume
     that the image uses the sRGB color space.  The difference between
     this option and Enfuse's default color blending algorithm is
     slight, and will be only noticeable when areas of different
     primary colors are blended together.

`-d'
`--depth=DEPTH'
     Force the number of bits per channel and the numeric format of the
     output image.

     Enfuse always uses a smart way to change the channel depth to
     assure highest image quality (at the expense of memory) whether
     requantization is implicit because of the output format or explicit
     with option `--depth'.

        * If the output-channel width is larger than the input-channel
          width of the input images, the input images' channels are
          widened to the output channel widthth immediately after
          loading, this is, as soon as possible.  Enfuse then performs
          all blending operations at the output-channel width, thereby
          preserving minute color details which can appear in the
          blending areas.

        * If the output-channel width is smaller than the input-channel
          width of the input images, the output image's channels are
          narrowed only right before it is written to disk, this is, as
          late as possible.  Thus the data benefits from the wider
          input channels for the longest time.

     All DEPTH specifications are valid in lowercase as well as
     uppercase letters.  For integer format use

    `8', `uint8'
          Unsigned 8bit; range: 0..255

    `int16'
          Signed 16bit; range: -32768..32767

    `16', `uint16'
          Unsigned 16bit; range: 0..65536

    `int32'
          Signed 32bit; range: -2147483648..2147483647

    `32', `uint32'
          Unsigned 32bit; range: 0..4294967295

     For floating-point format use

    `r32', `real32', `float'
          IEEE754 single precision floating-point, 32bit wide, 24bit
          significant
             * Minimal normalized value: 1.2*10^-38

             * Epsilon: 1.2*10^-7

             * Maximal finite value: 3.4*10^38

    `r64', `real64', `double'
          IEEE754 double precision floating-point, 64bit wide, 53bit
          significant
             * Minimal normalized value: 2.2*10^-308

             * Epsilon: 2.2*10^-16

             * Maximal finite value: 1.8*10^308

     If the requested DEPTH is not supported by the output file format,
     Enfuse warns and chooses the DEPTH that matches best.

     The OpenEXR data format is treated as IEEE754 float internally.
     Externally, this is on disk, OpenEXR data is represented by "half"
     precision floating-point numbers.

     OpenEXR (http://www.openexr.com/about.html#features) half
     precision floating-point, 16bit wide, 10bit significant
        * Minimum normalized value: 9.3*10^-10

        * Epsilon: 2.0*10^-3

        * Maximum finite value: 4.3*10^9

`-g'
     Save alpha channel as "associated".  See the TIFF documentation
     (http://www.awaresystems.be/imaging/tiff/tifftags/extrasamples.html)
     for an explanation.

     Gimp (before version 2.0) and CinePaint (*note Helpful Programs::)
     exhibit unusual behavior when loading images with unassociated
     alpha channels.  Use option `-g' to work around this problem.
     With this flag Enfuse will create the output image with the
     associated alpha tag set, even though the image is really
     unassociated alpha.

`-f WIDTHxHEIGHT'
`-f WIDTHxHEIGHT+xX-OFFSET+yY-OFFSET'
     Set the size of the output image manually to WIDTHxHEIGHT.
     Optionally specify the X-OFFSET and Y-OFFSET, too.

     This option is useful when the input images are cropped TIFF
     files, such as those produced by `nona'.  The stitcher `nona' is
     part of Hugin.  *Note Helpful Programs::.

`-m CACHESIZE'
     Set the CACHESIZE in megabytes (MB) of Enfuse's image cache.

     This is the amount of memory Enfuse will use for storing image data
     before swapping to disk.  The default is 1024MB, which is good for
     systems with 3-4gigabytes (GB) of RAM.

     See *note Tuning Memory Usage:: for details.


File: enfuse.info,  Node: Fusion Options,  Next: Expert Options,  Prev: Extended Options,  Up: Invocation

3.3 Fusion Options
==================

Fusion options define the proportion to which each input image's pixel
contributes to the output image.

`--wContrast=WEIGHT'
     Sets the relative WEIGHT of high-contrast pixels.  Default: 0.0.
     Valid range: 0 <= WEIGHT <= 1.  See *note Contrast Weighting:: and
     *note Option ContrastWindowSize: Expert Options.

`--wEntropy=WEIGHT'
     Sets the relative WEIGHT of high entropy pixels.  Default: 0.0.
     Valid range: 0 <= WEIGHT <= 1.  See *note Entropy Weighting:: and
     *note Options EntropyWindowSize and EntropyCutoff: Expert Options.

`--wExposure=WEIGHT'
     Sets the relative WEIGHT of the well-exposedness criterion.
     Increasing this weight relative to the others will make
     well-exposed pixels contribute more to the final output.  Default:
     1.0.  Valid range: 0 <= WEIGHT <= 1.  *Note Exposure Weighting::.

`--wMu=MEAN'
     Set the MEAN (this is, the center) of the Gaussian exposure weight
     curve.  Default: 0.5.  Valid range: 0 <= MEAN <= 1.

     Use this option to fine-tune exposure weighting (*note Exposure
     Weighting::).

`--wSaturation=WEIGHT'
     Sets the relative WEIGHT of high-saturation pixels.  Increasing
     this weight makes pixels with high saturation contribute more to
     the final output.  Default: 0.2.  Valid range: 0 <= WEIGHT <= 1.
     Saturation weighting is only defined for color images.  *Note
     Saturation Weighting::.

`--wSigma=STD-DEV'
     Standard deviation STD-DEV of the Gaussian exposure weight curve.
     Default: 0.2.  Low numbers give less weight to pixels that are far
     from `--wMu' and vice versa.  Valid range: 0 <= STD-DEV <= 1.

     Use this option to fine-tune exposure weighting (*note Exposure
     Weighting::).


File: enfuse.info,  Node: Expert Options,  Next: Option Delimiters,  Prev: Fusion Options,  Up: Invocation

3.4 Expert Options
==================

Expert options influence the workings of Enfuse that require the user
to read the manual before applying them successfully.

`--ContrastWindowSize=SIZE'
     Set the window SIZE for local contrast analysis.  The window will
     be a square of SIZExSIZE pixels.

     For contrast analysis SIZE values larger than 5 might result in a
     blurry composite image.  Values of 3 and 5 have given good results
     on focus stacks.

     Valid range: SIZE >= 3.

     Given an even SIZE Enfuse will automatically use the next odd
     number.

     See also *note Option -wContrast: Fusion Options. and `--HardMask'
     below.

`--EdgeScale=EDGE-SCALE'
`--EdgeScale=EDGE-SCALE:LCE-SCALE:LCE-FACTOR'
     A non-zero value for EDGE-SCALE switches on the
     Laplacian-of-Gaussian (LoG) edge detection algorithm.  EDGE-SCALE
     is the radius of the Gaussian used in the search for edges.
     Default: 0 pixels.

     A positive LCE-SCALE turns on local contrast enhancement (LCE)
     before the LoG edge detection.  LCE-SCALE is the radius of the
     Gaussian used in the enhancement step, LCE-FACTOR is the weight
     factor ("strength").
          enhanced =   (1 + LCE-FACTOR) * original
                     - LCE-FACTOR * GaussianSmooth(original, LCE-SCALE)

     LCE-SCALE defaults to 0 pixels and LCE-FACTOR defaults to 0.
     Append `%' to LCE-SCALE to specify the radius as a percentage of
     EDGE-SCALE.  Append `%' to LCE-FACTOR to specify the weight as a
     percentage.

`--EntropyCutoff=LOWER-CUTOFF'
`--EntropyCutoff=LOWER-CUTOFF:UPPER-CUTOFF'
     The first form defines the lower cutoff value below of which pixels
     are treated as pure black when calculating the local entropy.  The
     second form also defines the upper cutoff value above of which
     pixels are treated as pure white.

     For color images LOWER-CUTOFF and UPPER-CUTOFF are applied
     separately and independently to each channel.

     Defaults: 0% for LOWER-CUTOFF and 100% for UPPER-CUTOFF, this is,
     all pixels' values are taken into account.  Append a `%' to
     specify the cutoff relative to maximum pixel value in the source
     image (for example 255 or 65535).  *note Figure:entropy-cutoff::
     shows an example.

      [image src="entropy-cutoff.png" text="
           +-----------+------------+-----------+------------+-----------+
           +           +            +           +            +           +
           |           :            :           :            :           |
         1 ++......................................................####***
           |           :            :           :            :     #**** |
           |           :            :           :            :    ***    |
           |           :            :           :            :  ***      |
           |           :            :           :            ****        |
       0.8 ++..............................................***..........++
           |           :            :           :       **** :           |
           |           :            :           :     ***    :           |
           |           :            :           :   ***      :           |
           |           :            :           :****        :           |
       0.6 ++..................................***......................++
           |           :            :       ****:            :           |
           |           :            :     ***   :            :           |
           |           :            :   ***     :            :           |
           |           :            :****       :            :           |
       0.4 ++......................***..................................++
           |           :        ****:           :            :           |
           |           :      ***   :           :            :           |
           |           :    ***     :           :            :           |
           |           : ****       :           :            :           |
       0.2 ++..........***..............................................++
           |        ****            :           :            :           |
           |      ***  :            :           :            :           |
           |    ***    :            :           :            :           |
           | ****      :            :           :            :           |
         0 ***#.................................................Y.******++
           |           :           EntropyCutoff(Y, Lower, Upper) ###### |
           +           +            +           +            +           +
           +-----------+------------+-----------+------------+-----------+
           0          0.2          0.4         0.6          0.8          1
                                          Y

     " ]

     Figure 3.1: Linear lightness Y in comparison with an
     entropy-cutoff function for LOWER-CUTOFF = 5% and UPPER-CUTOFF =
     90% which are rather extreme values.

        Note that a high LOWER-CUTOFF value lightens the resulting
     image, as dark (and presumably noisy) pixels are averaged with
     _equal_ weights.  With `--EntropyCutoff=0', the default, on the
     other hand, "noise" might be interpreted as high entropy and the
     noisy pixels get a high weight, which in turn renders the resulting
     image darker.  Analogously, a low UPPER-CUTOFF darkens the output
     image.

  `--EntropyWindowSize=SIZE'
        Window SIZE for local entropy analysis.  The window will be a
     square of SIZExSIZE pixels.

        In the entropy calculation SIZE values of 3 to 7 yield an
     acceptable compromise of the locality of the information and the
     significance of the local entropy value itself.

        Valid range: SIZE >= 3.

        Given an even SIZE Enfuse will automatically use the next odd
     number.

  `--GrayProjector=PROJECTOR'
        Use gray projector PROJECTOR for conversion of RGB images to
     grayscale masks: (R, G, B) -> Y.  In
     version 3.2-staging-3ea737bf43e5 of Enfuse, the option is
     effective for exposure weighting contrast weighting.  Default:
     `average'.

        Valid values for PROJECTOR are:

    `average'
          Average red, green, and blue channel with equal weights.
          This is the default and it often is a good projector for
          gamma = 1 data.
               Y = (R + G + B) / 3

    `l-star'
          Use the L-channel of the L*a*b*-conversion of the image as its
          grayscale representation.  This is a useful projector for
          gamma = 1 data.  It reveals minute contrast variations even
          in the shadows and the highlights.  This projector is
          computationally expensive.

          See Wikipedia (http://en.wikipedia.org/wiki/Lab_color_space)
          for a detailed description of the Lab color space.

    `lightness'
          Compute the lightness of each RGB pixel as in an
          Hue-Saturation-Lightness (HSL) conversion of the image.
               Y = (max(R, G, B) + min(R, G, B)) / 2

    `value'
          Take the Value-channel of the Hue-Saturation-Value (HSV)
          conversion of the image.
               Y = max(R, G, B)

    `luminance'
          Use the weighted average of the RGB pixel's channels as
          defined by CIE ("Commission Internationale de l'E'clairage")
          and the JPEG standard.
               Y = 0.30 * R + 0.59 * G + 0.11 * B

    `channel-mixer:RED-WEIGHT:GREEN-WEIGHT:BLUE-WEIGHT'
          Weight the channels as given.
               Y = RED-WEIGHT * R + GREEN-WEIGHT * G + BLUE-WEIGHT * B

          The weights are automatically normalized to one, so
                   --GrayProjector=channel-mixer:0.25:0.5:0.25
                   --GrayProjector=channel-mixer:1:2:1
                   --GrayProjector=channel-mixer:25:50:25
          all define the same mixer configuration.

          The three weights RED-WEIGHT, GREEN-WEIGHT, and BLUE-WEIGHT
          define the relative weight of the respective color channel.
          The sum of all weights is normalized to one.

  `--HardMask'
        Force hard blend masks on the finest scale.  This is the
     opposite flag of `--SoftMask'.

        This blending mode avoids averaging of fine details (only) at
     the expense of increasing the noise.  However it considerably
     improvs the sharpness of focus stacks.  Blending with hard masks
     has solely proven useful with focus stacks.

        See also *note Option -wContrast: Fusion Options. and
     `--ContrastWindowSize' above.

  `--MinCurvature=CURVATURE'
        Define the minimum CURVATURE for the LoG edge detection.
     Default: 0.  Append a `%' to specify the minimum curvature
     relative to maximum pixel value in the source image (for example
     255 or 65535).

        A positive value makes Enfuse use the local contrast data
     (controlled with `--ContrastWindowSize') for curvatures less than
     CURVATURE and LoG data for values above it.

        A negative value truncates all curvatures less than -CURVATURE
     to zero.  Values above CURVATURE are left unchanged.  This
     effectively suppresses weak edges.

  `--SoftMask'
        Consider all masks when fusing.  This is the default.

  `--SaveMasks'
  `--SaveMasks=SOFT-MASK-TEMPLATE'
  `--SaveMasks=SOFT-MASK-TEMPLATE:HARD-MASK-TEMPLATE'
        Save all weight files as TIFF images.  First form: Save all
     soft weight masks in files.  If option `--HardMask' is effective
     also save the hard masks.  The defaults are `mask%04i.tif' and
     `mask%04i_wta.tif'.  In the second form SOFT-MASK-TEMPLATE defines
     the names of the soft mask files.  In the third form
     HARD-MASK-TEMPLATE additionally defines the names of the hard mask
     files.

        Both SOFT-MASK-TEMPLATE and HARD-MASK-TEMPLATE define templates
     that are expanded for each mask file.  In a template a percent
     sign (`%') introduces a variable part.  All other characters are
     copied literally.  Lowercase letters refer to the name of the
     respective input file, whereas uppercase ones refer to the name of
     the output file (*note Common Options::).  *note
     Table:mask-template-characters:: lists all variables.

        A fancy mask filename template could look like this:

          %D/soft-mask-%02n-%f.viff

        It puts the mask files into the same directory as the output
     file (`%D'), generates a two-digit index (`%02n') to keep the mask
     files nicely sorted, and decorates the mask filename with the name
     of the associated input file (`%f') for easy recognition.

`%%'
     Produces a literal `%'-sign.

`%i'
     Expands to the index of the mask file starting at zero.

     `%i' supports setting a pad character or a width specification:

          `%' PAD WIDTH `i'

     PAD is either `0' or any punctuation character; the default pad
     character is `0'.  WIDTH is an integer specifying the minimum
     width of the number.  The default is the smallest width given the
     number of input images, this is 1 for 2-9 images, 2 for 10-99
     images, 3 for 100-999 images, and so on.

     Examples: `%i', `%02i', or `%_4i'.

`%n'
     Expands to the number of the mask file starting at one.  Otherwise
     it behaves identical to `%i' including pad character and width
     specification.

`%p'
     This is the full name (path, filename, and extension) of the input
     file associated with the mask.

     Example: If the input file is called `/home/luser/snap/img.jpg',
     `%p' expands to `/home/luser/snap/img.jpg', or shorter: `%p' =>
     `/home/luser/snap/img.jpg'.

`%P'
     This is the full name of the output file.

`%d'
     Is replaced with the directory part of the associated input file.
     *note (coreutils.info)dirname::.

     Example (cont.): `%d' => `/home/luser/snap'.

`%D'
     Is replaced with the directory part of the output file.

`%b'
     Is replaced with the non-directory part (often called "basename")
     of the associated input file.  *note (coreutils.info)basename::.

     Example (cont.): `%b' => `img.jpg'.

`%B'
     Is replaced with the non-directory part of the output file.

`%f'
     Is replaced with the filename without path and extension of the
     associated input file.

     Example (cont.): `%f' => `img'.

`%F'
     Is replaced with the filename without path and extension of the
     output file.

`%e'
     Is replaced with the extension (including the leading dot) of the
     associated input file.

     Example (cont.): `%e' => `.jpg'.

`%E'
     Is replaced with the extension of the output file.

Table 3.1: Special characters to control the generation of mask
filenames.


File: enfuse.info,  Node: Option Delimiters,  Prev: Expert Options,  Up: Invocation

3.5 Option Delimiters
=====================

Enfuse allows the arguments supplied to the program's options to be
separated by different separators.  The online documentation and this
manual, however, exclusively use the colon `:' in every syntax
definition and in all examples.

*Numeric Arguments*

   Valid delimiters are the the semicolon `;', the colon `:', and the
slash `/'.  All delimiters may be mixed within any option that takes
numeric arguments.

Examples:

`--EdgeScale=0.667:6.67:3.5'
     Separate all arguments with colons.

`--EdgeScale=0.667;6.67;3.5'
     Use semi-colons.

`--EdgeScale=0.667;6.67/3.5'
     Mix semicolon and slash in weird ways.

`--EntropyCutoff=3%/99%'
     All delimiters also work in conjuction with percentages.

`--GrayProjector=channel-mixer:3/6/1'
     Separate arguments with a colon and two slashes.

`--GrayProjector=channel-mixer/30;60:10'
     Go wild and Enfuse will understand.

*Filename Arguments*

   Here, the accepted delimiters are `,', `;', and `:'.  Again, all
delimiters may be mixed within any option that has filename arguments.

Examples:

`--SaveMasks=soft-mask-%03i.tif:hard-mask-03%i.tif'
     Separate all arguments with colons.

`--SaveMasks=%d/soft-%n.tif,%d/hard-%n.tif'
     Use a comma.


File: enfuse.info,  Node: Weighting Functions,  Next: Understanding Masks,  Prev: Invocation,  Up: Top

4 Weighting Functions
*********************

As has been noted in the Overview (*note Overview::), Enfuse supports
four different types of weighting.  The following subsections describe
the concept of weighting and all weighting functions in detail.

* Menu:

* Weighting Pixels::            General concept of weighting pixels
* Exposure Weighting::          Weighting by exposure
* Saturation Weighting::        Weighting by saturation
* Contrast Weighting::          Weighting by local contrast
* Entropy Weighting::           Weighting by local entropy


File: enfuse.info,  Node: Weighting Pixels,  Next: Exposure Weighting,  Up: Weighting Functions

4.1 Weighting Pixels
====================

Image fusion maps each pixel P(i, x, y) of every input image i to a
single pixel Q(x, y) in the output image:
     P(i, x, y) -> Q(x, y),
   where x runs from 1 to the common width of the images, y from 1 to
the common height, and i from 1 to the number of input images n.

   Enfuse allows for weighting the contribution of each P(i, x, y) to
the final Q(x, y):
     w(P(1, x, y)) * P(1, x, y) +
     ... +
     w(P(n, x, y)) * P(n, x, y)
     -> Q(x, y),                                                  (W)
   where

   * each w is non-negative to yield a physical intensity and

   * the sum of all w is one to leave the total intensity unchanged.

The pixel weights w themselves are weighted sums with the same
constraints
     w(P) = w_exp * f_exp(P) +
            w_sat * f_sat(P) +
            w_cont * f_cont(P, r_cont) +
            w_ent * f_ent(P, r_ent),
   where we have abbreviated P(i, x, y) to P for simplicity.  The user
defines the constants w_exp, w_sat, w_cont, and w_ent with the options
`--wExposure', `--wSaturation', `--wContrast', and `--wEntropy'.  The
functions f_exp, f_sat, f_cont, and f_ent along with the window
sizes r_cont and r_ent are explained in the next sections.

* Menu:

* Weighted Average::            Enfuse's default weighting algorithm
* Disabling Averaging::         ``Super Trouper'' weighting for focus stacks


File: enfuse.info,  Node: Weighted Average,  Next: Disabling Averaging,  Up: Weighting Pixels

4.1.1 Weighted Average
----------------------

By default, Enfuse uses a weighted average, where _each_ pixel
contributes as much as its weight demands.  Of course the weights can
be extreme, favouring only a few pixels or even only one pixel in the
input stack.  Extremes are untypical, however.

   Equal weights are another extreme that turns (W) into an arithmetic
average.  this is why we sometimes speak of the "averaging property" of
this weighting algorithm, like smoothing out noise.


File: enfuse.info,  Node: Disabling Averaging,  Prev: Weighted Average,  Up: Weighting Pixels

4.1.2 Disabling Averaging: Option `--HardMask'
----------------------------------------------

The weighted average computation as described above has proven to be
widely successful with the exception of one special case: focus
stacking (*note Focus Stacks::), where the averaging noticeably softens
the final image.

   Use `--HardMask' to switch Enfuse into a different ("Super Trouper")
weighting mode, where the pixel with the highest weight wins, this is,
gets weight one, and all other pixels get the weight of zero ("The
Winner Takes It All.").  With `--HardMask' Equation (W) becomes
     P(i, x, y) -> Q(x, y),
   where
     w(P(i, x, y)) >= w(P(j, x, y)) for all 1 <= j <= n.

Note that this "averaging" scheme lacks the nice noise-reduction
property of the weighted average (W), because only a single input pixel
contributes to the output.


File: enfuse.info,  Node: Exposure Weighting,  Next: Saturation Weighting,  Prev: Weighting Pixels,  Up: Weighting Functions

4.2 Exposure Weighting
======================

Exposure weighting prefers pixels with a luminance Y close to the
center of the normalized, real-valued luminance interval [0, 1].

   RGB-pixels get converted to luminance using the grayscale projector
given by `--GrayProjector', which defaults to `average'.  Grayscale
pixels are identified with luminance.

   In the normalized luminance interval 0.0 represents pure black and
1.0 represents pure white independently of the data type of the input
image.  This is, for a JPEG image the luminance 255 maps to 1.0 in the
normalized interval and for a 32bit TIFF picture the highest luminance
value 4294967295 also maps to 1.0.  The middle if the luminance
interval, 0.5, is where a neutral gray tone ends up with every camera
that had no exposure correction dialed in, for example the image of a
gray- or white-card.

   The exposure weighting algorithm only looks at a single pixel at a
time; the pixel's neighborhood is not taken into account.

   The weighting function is the Gaussian
     w_exp(Y) = exp(-0.5 * ((Y - Mu) / Sigma)^2),
   whose center Mu and width Sigma are controlled by the command line
options `--wMu' and `--wSigma' respectively.  Mu defaults to 0.5, the
middle of the luminance interval.  Sigma defaults to 0.2.  *note
Figure:gaussian:: shows a Gaussian with these parameters.

 [image src="gaussian.png" text="
    1 ++----------+------------+---*****---+------------+----------++
      +           +            +  *     *  +     Gaussian(Y) ****** +
      |                         **       **                         |
      |                        **         **                        |
      |                       *             *                       |
      |                       *             *                       |
  0.8 ++                     *               *                     ++
      |                     *                 *                     |
      |                    *                   *                    |
      |                    *                   *                    |
      |                   *                     *                   |
      |                  *                       *                  |
  0.6 ++                 *                       *                 ++
      |                 *                         *                 |
      |                 *                         *                 |
      |                *                           *                |
      |               *                             *               |
      |              **                             **              |
      |             *                                 *             |
  0.4 ++            *                                 *            ++
      |            *                                   *            |
      |            *                                   *            |
      |          **                                     **          |
      |          *                                       *          |
      |        **                                         **        |
  0.2 ++      **                                           **      ++
      |      **                                             **      |
      |     *                                                 *     |
      |   **                                                   **   |
      |***                                                       ***|
      *           +            +           +            +           *
    0 ++----------+------------+-----------+------------+----------++
      0          0.2          0.4         0.6          0.8          1
                                     Y

" ]

Figure 4.1: Gaussian function with Enfuse's default parameters MU = 0.5
and SIGMA = 0.2.

   The options `--wMu' and `--wSigma' are for fine-tuning the final
result without changing the set of input images.  Option `--wMu' sets
the point MU of optimum exposure.  The default is MU = 0.5, exactly the
middle between pure black (0.0) and pure white (1.0).  Increasing MU
makes Enfuse prefer lighter pixels, rendering the final image lighter
and vice versa.  Option `--wSigma' defines the range SIGMA of
acceptable exposures.  The default is SIGMA = 0.2, which means at MU
+/- 0.2 the weight will be approximately 0.88.  Small values of SIGMA
penalize exposures deviant from MU more and vice versa.

*Summary of influential options*

`--wExposure'
     *note Fusion Options::

`--wMu'
     *note Fusion Options::

`--wSigma'
     *note Fusion Options::

`--GrayProjector'
     *note Expert Options::


File: enfuse.info,  Node: Saturation Weighting,  Next: Contrast Weighting,  Prev: Exposure Weighting,  Up: Weighting Functions

4.3 Saturation Weighting
========================

Saturation weighting prefers pixels with a high saturation.

   Enfuse computes the saturation of a pixel according to the following
algorithm.

     MAX := maximum(R, G, B)
     MIN := minimum(R, G, B)
     if MAX = MIN then
         SATURATION := 0
     else
         SUM := MAX + MIN
         DIFFERENCE := MAX - MIN
         if SUM <= 1 then
             SATURATION := DIFFERENCE / SUM
         else
             SATURATION := DIFFERENCE / (2 - SUM)
         end if
     end if

Obviously, saturation weighting can only be defined for RGB images, not
for grayscale ones!  If you need something similar check out *note
Entropy Weighting::; entropy weighting works for both RGB and grayscale
pictures.

   The saturation weighting algorithm only looks at a single pixel at a
time; the pixel's neighborhood is not taken into account.

*Summary of influential options*

`--wSaturation'
     *note Fusion Options::


File: enfuse.info,  Node: Contrast Weighting,  Next: Entropy Weighting,  Prev: Saturation Weighting,  Up: Weighting Functions

4.4 Contrast Weighting
======================

Contrast weighting favors pixels inside a high contrast neighborhood.
The notion of "high contrast" is defined either by two different
criteria or by a blend of both:

   * The standard deviation (SDev) of all the pixels in the local
     analysis window is large.  *Note Standard Deviation::.

   * The Laplacian-of-Gaussian (LoG) has a large magnitude.  *Note
     Laplacian of Gaussian::.

   * If the LoG magnitude is below a given threshold, use SDev data,
     otherwise stick with LoG.  *Note Blend SDev and LoG::.

   Enfuse converts every RGB image to grayscale before it determines
its contrast.  Option `--GrayProjector' (*note Expert Options::)
controls the projector function.  Depending on the subject one of
several grayscale projectors may yield the best black-and-white
contrast for image fusion.

   In the following sections we describe each algorithm in detail.

* Menu:

* Standard Deviation::          Standard deviation (SDev)
* Laplacian of Gaussian::       LoG, a second derivative method
* Blend SDev and LoG::          Mix and match SDev and LoG
* Scaling and Choice of Mode::  How parameters do not scale; neither does mode


File: enfuse.info,  Node: Standard Deviation,  Next: Laplacian of Gaussian,  Up: Contrast Weighting

4.4.1 Standard Deviation
------------------------

The pixel under consideration C sits exactly in the center of a square,
the so-called "local analysis window".  It always has an uneven edge
length.  The user sets the size with option `--ContrastWindowSize'.
*note Figure:local-analysis-window:: shows two windows with different
sizes.

 [image src="local-analysis-window.png" ]

Figure 4.2: Examples of local analysis windows for the sizes 3 and 5.
"C" marks the center where the pixel gets the weight.  "N" are
neighboring pixels, which all contribute equally to the weight.

   During the analysis Enfuse scans the local analysis window across all
rows and all columns(1) of each of the input images to compute the
contrast weight of every pixel.

*Summary of influential options*

`--wContrast'
     *note Fusion Options::

`--HardMask'
     *note Fusion Options::

`--ContrastWindowSize'
     *note Expert Options::

`--GrayProjector'
     *note Expert Options::

4.4.1.1 Statistical Moments
...........................

We start with the "probability function" w of the random variable X:
     w: x -> p({omega: X(omega) = x}).
   It associates a probability p with each of the n different possible
outcomes omega of the random variable X.  Based on w, we define the
"expectation value" or "First Moment" of the random variable X:
     Ex X := sum(x_i * w(x_i), i = 1..n).
   Using the definition of the expectation value, we define the
"variance", or "Second Moment" as
     Var X := Ex((X - Ex X)^2),
   and the "standard deviation" as
     Sdev X := sqrt(Var X).
   Obviously, the variance of X is the expectation value of the squared
deviation from the expectation value of X itself.  Note that the
variance's dimension is X's dimension squared; the standard deviation
rectifies the dimension to make it comparable with X itself again.

4.4.1.2 Estimators
..................

In Enfuse, we assume that X follows a uniform probability function w(x)
= const.  This is, all pixel values in the local analysis window are
considered to be equally probable.  Thus, the expectation value and the
variance can be estimated from the pixel values like this
     Ex X = sum(x_i, i = 1..n) / n.
   In other words: the expectation value is the arithmetic mean of the
lightness of all pixels in the local analysis window.  Analogously, the
variance becomes
     Var X = sum((x_i - Ex x)^2, i = 1..n) / (n - 1).

   ---------- Footnotes ----------

   (1) In the current implementation a `floor(ContrastWindowSize / 2)'
wide border around the images remains unprocessed and gets a weight of
zero.


File: enfuse.info,  Node: Laplacian of Gaussian,  Next: Blend SDev and LoG,  Prev: Standard Deviation,  Up: Contrast Weighting

4.4.2 Laplacian of Gaussian
---------------------------

The "Laplacian of Gaussian" (LoG) is an operator to detect edges in an
image.  Sometimes the LoG-operator is also called MARR-HILDRETH
operator.  A Laplacian-of-Gaussian operator,
`vigra::laplacianOfGaussian'
(http://hci.iwr.uni-heidelberg.de/vigra/doc/vigra/group__CommonConvolutionFilters.html)
is part of the package VIGRA (http://hci.iwr.uni-heidelberg.de/vigra/)
that Enfuse is built upon and is used for edge detection if
option `--EdgeScale' is non-zero and `--MinCurvature' equal to or less
than zero.

   Let the Gaussian function be
     g(x, y) = 1/pi * exp((x^2 + y^2) / (2 * sigma^2))/(2 * sigma^2)
   The parameter sigma, the argument of option `--EdgeScale', is the
length scale on which edges are detected by g(x, y).  We apply the
Laplacian operator in Cartesian coordinates
     Delta := Nabla o Nabla = (d^2/dx^2 + d^2/dy^2)
   to g(x, y), to arrive at a continous representation of the
two-dimensional filter kernel
     k(x, y) = (xi^2 - 1) * exp(-xi^2) / (pi * sigma^4),
   where we have used the dimensionless distance xi from the origin
     xi^2 = (x^2 + y^2) / (2 * sigma^2).
   Enfuse uses a discrete approximation of k in the convolution with
the image.  The operator is radially symmetric with respect to the
origin, which is why we can easily plot it in *note
Figure:laplacian-of-gaussian::, setting R = sqrt(x^2 + y^2).

 [image src="laplacian-of-gaussian.png" text="
  1 ++--------------+---------------+---------------+--------------++
    +               +             *****             +               +
    |               :          **** :  *******      :               |
    |               :        **     :        *******:               |
  0 ++.....................**.......................*****************
    |               :    **         :               :               |
    |               :    *          :               :               |
    |               :  **           :               :               |
    |               :  *            :               :               |
 -1 ++...............**............................................++
    |               :*              :               :               |
    |               *               :               :               |
    |               *               :               :               |
 -2 ++.............*...............................................++
    |             * :               :               :               |
    |            ** :               :               :               |
    |           *   :               :               :               |
    |           *   :               :               :               |
 -3 ++.........*...................................................++
    |         *     :               :               :               |
    |         *     :               :               :               |
    |       **      :               :               :               |
 -4 ++......*......................................................++
    |      *        :               :               :               |
    |     *         :               :               :               |
    |    *          :               :               :               |
    |  **           :               :               :               |
 -5 ***............................................................++
    |               :               :               :               |
    |               :            LaplacianOfGaussian(R, 0.5) ****** |
    +               +               +               +               +
 -6 ++--------------+---------------+---------------+--------------++
    0              0.5              1              1.5              2
                                    R

" ]

Figure 4.3: Laplacian-of-Gaussian function for sigma = 0.5.

See also HIPR2: Laplacian of Gaussian
(http://homepages.inf.ed.ac.uk/rbf/HIPR2/log.htm).

   Sometimes the LoG is plagued by noise in the input images.  After
all it is a numerical approximation of the second derivative and
deriving always "roughens" a function.  The (normalized) mask files
relentlessly disclose such problems.  Use option `--MinCurvature' with
a _negative_ argument CURVATURE to suppress all edges with a curvature
below -CURVATURE (which is a positive value).  Check the effects with
the mask files and particularly the `mask[0-9][0-9][0-9][0-9]_wta.tif'
files if using option `--HardMask'.

   To indicate the CURVATURE in relative terms, which is particularly
comprehensible for humans, append a percent sign (`%').  Try minimum
curvatures starting from -0.5% to -3%.

*Summary of influential options*

`--wContrast'
     *note Fusion Options::

`--HardMask'
     *note Fusion Options::

`--EdgeScale'
     *note Expert Options::

`--MinCurvature'
     *note Expert Options::


File: enfuse.info,  Node: Blend SDev and LoG,  Next: Scaling and Choice of Mode,  Prev: Laplacian of Gaussian,  Up: Contrast Weighting

4.4.3 Blend Standard Deviation and Laplacian of Gaussian
--------------------------------------------------------

Enfuse can team the standard deviation computation and Laplacian of
Gaussian to deliver the best of both methods.  Use a _positive_
argument CURVATURE with option `--MinCurvature' to combine both
algorithms.  In this mode of operation Enfuse computes the SDev-weight
and the LoG-weight, then uses the LoG to decide whether to go with that
value or prefer the SDev data.  If the LoG is greater than CURVATURE
Enfuse uses the weight delivered by the LoG, otherwise the SDev-weight
is rescaled such that its maximum is equal to CURVATURE and the scaled
SDev is used as weight.

   This technique merges the two edge detection methods where the are
best.  The LoG excels with clear edges and cannot be fooled by strong
but smooth gradients.  However, it is bad at detecting faint edges and
it is susceptible to noise.  The SDev on the othe hand shines with even
the most marginal edges and resists noise quite well.  Its weakness is
that is is easily deceived by strong and smooth gradients.  Tuning
CURVATURE the user can pick the best threshold for a given set of
images.

*Summary of influential options*

`--wContrast'
     *note Fusion Options::

`--HardMask'
     *note Fusion Options::

`--ContrastWindowSize'
     *note Expert Options::

`--GrayProjector'
     *note Expert Options::

`--EdgeScale'
     *note Expert Options::

`--MinCurvature'
     *note Expert Options::


File: enfuse.info,  Node: Scaling and Choice of Mode,  Prev: Blend SDev and LoG,  Up: Contrast Weighting

4.4.4 Scaling and Choice of Mode
--------------------------------

Experience has shown that neither the parameters EDGESCALE and
CURVATURE nor the mode of operation (SDev-only, LoG-only, or a blend of
both) scales to different image sizes.  In practice this means that if
you start with a set of reduced size images, say 2808x1872 pixels,
carefully optimize EDGESCALE, CURVATURE and so on, moreover find
LoG-only the best mode and then switch to the original resolution of
5616x3744 pixels, multiplying (or dividing) the parameters by four and
sticking to LoG-only might _not_ result in the best fused image.  For
best quality perform the parameter optimization and the search for the
most appropriate mode at the final resolution.


File: enfuse.info,  Node: Entropy Weighting,  Prev: Contrast Weighting,  Up: Weighting Functions

4.5 Entropy Weighting
=====================

Entropy weighting prefers pixels inside a high entropy neighborhood.

   Let S be an n-ary source.  Watching the output of S an observer on
average gains the information
     H_a(n) := sum(p(x) * log_a(1 / p(x)), x in S)
   per emitted message, where we assume the knowledge of the probability
function p(S).  The expectation value H_a(n) is called "entropy" of the
source S.  Entropy measures our uncertainty if we are to guess which
message gets chosen by the source in the future.  The unit of the
entropy depends on the choice of the constant a > 1.  Obviously
     H_b(n) = H_a(n) / log_a(b)
   holds for all b > 1.  We use a = 2 for entropy weighting and set the
entropy of the "impossible message" to zero according to
     lim(p * log_a(1 / p), p -> 0) = 0.
   *note Figure:entropy:: shows an entropy function.

 [image src="entropy.png" text="
    1 ++----------+------------+-*********-+------------+----------++
      +           +          ****         ****    Entropy(p) ****** +
      |                    ***               ***                    |
      |                  ***                   ***                  |
      |                 **                       **                 |
      |               **                           **               |
  0.8 ++             **                             **             ++
      |             *                                 *             |
      |            *                                   *            |
      |           *                                     *           |
      |          *                                       *          |
      |         *                                         *         |
  0.6 ++       *                                           *       ++
      |        *                                           *        |
      |       *                                             *       |
      |      *                                               *      |
      |     *                                                 *     |
      |     *                                                 *     |
      |    *                                                   *    |
  0.4 ++   *                                                    *  ++
      |   *                                                     *   |
      |   *                                                     *   |
      |  *                                                       *  |
      |  *                                                       *  |
      |  *                                                        * |
  0.2 ++*                                                         *++
      | *                                                          *|
      |*                                                           *|
      |*                                                           *|
      |                                                             |
      +           +            +           +            +           +
    0 ++----------+------------+-----------+------------+----------++
      0          0.2          0.4         0.6          0.8          1
                                     p

" ]

Figure 4.4: Entropy function H for an experiment with exactly two
outcomes.

   For more on (information) entropy visit Wikipedia
(http://en.wikipedia.org/wiki/Information_entropy).

   Enfuse computes a pixel's entropy by considering the pixel itself and
its surrounding pixels quite similar to *note Contrast Weighting::.  The
size of the window is set by `--EntropyWindowSize'.  Choosing the right
size is difficult, because there is a serious tradeoff between the
locality of the data and the size of the sample used to compute H.  A
large window results in a large sample size and therefore in a reliable
entropy, but considering pixels far away from the center degrades H
into a non-local measure.  For small windows the opposite holds true.

   Another difficulty arises from the use of entropy as a weighting
function in dark parts of an image, this is, in areas where the
signal-to-noise ratio is low.  Without any precautions high noise is
taken to be high entropy, which might not be desired.  Use
option `--EntropyCutoff' to control the black level when computing the
entropy.

   On the other extreme side of lightness, very light parts of an image,
the sensor might already have overflown without the signal reaching 1.0
in the normalized luminance interval.  For these pixels the entropy is
zero and Enfuse can be told of the threshold by properly setting the
second argument of `--EntropyCutoff'.

*Summary of influential options*

`--wEntropy'
     *note Fusion Options::

`--EntropyWindowSize'
     *note Expert Options::

`--EntropyCutoff'
     *note Expert Options::


File: enfuse.info,  Node: Understanding Masks,  Next: Tuning Memory Usage,  Prev: Weighting Functions,  Up: Top

5 Understanding Masks
*********************

A "binary mask" indicates for every pixel of an image if this pixel
must be considered in further processing or ignored.  For a "weight
mask", the value of the mask determines how much the pixel contributes,
zero again meaning "no contribution".

   Masks arise in two places: as part of the input files and as separate
files, showing the actual pixel weights prior to image blendung or
fusion.  We shall explore both occurrences in the next sections.

5.1 Masks in Input Files
========================

Each of the input files for Enfuse and Enblend can contain its own
mask.  Both applications interpret them as binary masks no matter how
many bits per image pixel they contain.

   Use ImageMagick's `identify' or, for TIFF files, `tiffinfo' to
inquire quickly whether a file contains a mask.  *note Helpful
Programs:: shows where to find these programs on the web.

     $ identify -format "%f %m %wx%h %r %q-bit" remapped-0000.tif
     remapped-0000.tif TIFF 800x533 DirectClassRGBMatte 8-bit
                                                  ^^^^^ mask

     $ tiffinfo remapped-0000.tif
     TIFF Directory at offset 0x1a398a (1718666)
       Subfile Type: (0 = 0x0)
       Image Width: 800 Image Length: 533
       Resolution: 150, 150 pixels/inch
       Position: 0, 0
       Bits/Sample: 8
       Sample Format: unsigned integer
       Compression Scheme: PackBits
       Photometric Interpretation: RGB color
       Extra Samples: 1<unassoc-alpha>            <<<<< mask
       Orientation: row 0 top, col 0 lhs
       Samples/Pixel: 4                           <<<<< R, G, B, and mask
       Rows/Strip: 327
       Planar Configuration: single image plane

The "Matte" part of the image class and the "Extra Samples" line tell
us that the file features a mask.  Also, many interactive image
manipulation programs show the mask as a separate channel, sometimes
called "Alpha".  There, the white (high mask value) parts of the mask
enable pixels and black (low mask value) parts suppress them.

   The multitude of terms all describing the concept of a mask is
confusing.

Mask
     A mask defines a selection of pixels.  A value of zero represents
     an unselected pixel.  The maximum value ("white") represents a
     selected pixel and the values between zero and the maximum are
     partially selected pixels.  See Gimp-Savy
     (http://gimp-savvy.com/BOOK/index.html?node42.html).

Alpha Channel
     The alpha channel stores the transpacency value for each pixel,
     typically in the range from zero to one.  A value of zero means the
     pixel is completely transparent, thus does not contribute to the
     image.  A value of one on the other hand means the pixel is
     completely opaque.

Matte
     The notion "matte" as used by ImageMagick refers to an inverted
     alpha channel, more precisely: 1 - alpha.  See ImageMagick
     (http://www.imagemagick.org/Usage/channels/#trans) for further
     explanations.

   Enblend and Enfuse only consider pixels that have an associated mask
value different from zero.  If an input image does not have an alpha
channel, Enblend warns and assumes a mask of all non-zero values, this
is, it will use every pixel of the input image for fusion.

   Stitchers like `nona' add a mask to their output images.

   Sometimes it is helpful to manually modify a mask before fusion.  For
example to suppress unwanted objects (insects and cars come into mind)
that moved across the scene during the exposures.  If the masks of all
input images are black at a certain position, the output image will
have a hole there.

5.2 Weight Mask Files
=====================

...


File: enfuse.info,  Node: Tuning Memory Usage,  Next: Applications,  Prev: Understanding Masks,  Up: Top

6 Tuning Memory Usage
*********************

The default configuration of Enfuse assumes a system with 3-4GB of RAM.

   If Enfuse has been compiled with the C++-preprocessor symbol
`ENBLEND_CACHE_IMAGES' it uses its own image cache, whose size is user
configurable with the option `-m CACHE-SIZE' (*note Extended
Options::).  Furthermore, option `-b BUFFER-SIZE' (*note Extended
Options::) allows for fine-tuning the size of a single buffer inside
the image cache.  Note that CACHE-SIZE is given in megabytes, whereas
BUFFER-SIZE is given in kilobytes.

   Usually the user lets the operating system take care of the memory
management of all processes.  However, a user of Enfuse might want to
control the balance between the operating systems' Virtual Memory
System and Enfuse's image cache for several reasons.

   * Paging in or out parts of a process' image runs at kernel level and
     thus can make user processes appear unresponsive or "jumpy".  The
     caching mechanism of Enfuse of course runs as a user process,
     which is why it has less detrimental effects on the system's
     overall responsiveness.

   * Enfuse's image cache has been optimized for accesses to image data.
     And all algorithms in Enfuse have been carefully arranged to play
     nice with the image cache.  An operating system's cache has no
     knowledge of these particular memory access patterns.

   * The disk access of the operating system to the swap device has been
     highly optimized.  Enfuse on the other hand uses the standard
     IO-layer which is a slower interface.

   * Limiting the amount of image cache prevents Enfuse from eating up
     most or all RAM, thereby forcing all user applications into the
     swap device.

The CACHE-SIZE should be set in a way as to reconcile all of the above
aspects even for the biggest data sets (this is many images and large
images).

   *note Table:cache-size-settings:: suggestes some cache- and
buffer-sizes for different amounts of available RAM.

      RAM  | CACHE-SIZE | BUFFER-SIZE | Comment
      MB   |     MB     |     KB      |
     ------+------------+-------------+---------
      4096 | 1024       | 2048        | default
      2048 | 512--1024  | 1024        |
      1024 | 256--512   | 256--512    |

Table 6.1: Suggested cache-size settings


File: enfuse.info,  Node: Applications,  Next: Helpful Programs,  Prev: Tuning Memory Usage,  Up: Top

7 Applications of Enfuse
************************

The section describes some of the novel possibilities that Enfuse
offers the photographer.  In contrast to the previous chapters it
centers around the image effects.

* Menu:

* What Images::                 What makes images fusable?
* Repetition::                  Just taking the same shot multiple times
* Exposure Series::             Varying the exposure time
* Flash Exposure Series::       Varying the flash output
* Polarization Series::         Changing the polarizer angle
* Focus Stacks::                Stacking images with different in-focus distance


File: enfuse.info,  Node: What Images,  Next: Repetition,  Up: Applications

7.1 What Makes Images Fusable?
==============================

Images should align well to be suitable for fusion.  However, there is
no hard mathematical rule what "well" means.  The alignment
requirements for 16MPixel images to yield a sharp 4"x6" print at 300dpi
("dpi" means dots per inch) or even for web presentation are relatively
low, whereas the alignment of 8MPixel images for a 12"x18" print ought
to be tight.

   If the input images need to be aligned, Hugin (*note Helpful
Programs::) is the tool of choice.  It produces images exactly in the
format that Enfuse expects.

   Sometimes images naturally align extremely well so that no
re-alignment is required.  An image series with preprogrammed exposure
steps taken in rapid succession where the camera is mounted on a heavy
tripod and a humongous ball head, mirror lockup and a cable release are
used comes into mind.

   When in doubt what will work, try it, and judge for yourself.

Useful ideas for a good alignment:

   * Fix all camera parameters that are not explicitely varied.

    _Aperture_
          Engage full manual (<M>) or aperture-priority (<A>) mode.

    _Auto-focus_
          Disable "Auto Focus".  Be aware that the auto-focus function
          could be linked to shutter-release button position "half
          pressed" or to the shutter release in insidious ways.

    _Closed eyepiece_
          (This applies only to single lens reflex cameras.) Close the
          eyepiece when using a cable release to suppress variations in
          stray light.

    _Exposure time/Shutter speed_
          Use the shortest possible exposure time or, in other words,
          use the fastest shutter speed to avoid blur caused by camera
          shake or motion blur.

    _Flash power_
          Explicitely control the flash power of _all_ flashes.  This is
          sometimes called "flash exposure lock".

    _Sensitivity_
          Disable "Auto ISO".

    _White balance_
          Disable "Auto White Balance".  Instead use the most suitable
          fixed white balance or take the white balance off a white
          card.  When in doubt use the setting "Daylight" or equivalent.

   * Steady the camera by any means.

        * Apply your best camera bracing technique combined with
          controlled breathing.

        * Prefer a monopod or better rigid tripod with a heavy head.

        * Use a cable release if possible.

        * (This applies to cameras with a moving mirror only.)  Engage
          "mirror lockup".

        * Consider automatic bracketing when applicable.

        * Activate camera- or lens-based image stabilization if you are
          sure that it improves the image quality in your particular
          case, otherwise disengage the feature.

          For some lens-based image stabilization systems it is known
          that they "lock" into different positions every time they are
          activated.  Moreover, some stabilization systems decrease the
          image quality when the lens is mounted on a tripod.

   * Fire in rapid succession.


File: enfuse.info,  Node: Repetition,  Next: Exposure Series,  Prev: What Images,  Up: Applications

7.2 Repetition - Noise Reduction
================================

*Main Purpose*:  Reduce noise

With the default settings Enfuse computes a weighted average of the
input pixels.  For a series of images, repeated with identical settings
this results in a reduction of (photon shot) noise.  In other words,
the dynamic range increases slightly, because the higher
signal-to-noise ratio makes darker shades usable.  Furthermore, smooth
or glossy surfaces get a "cleaner" look and edges become visually
sharper.  The nitty-gritty reportage look that sometimes stems from a
high sensitivity setting disappears.

   Averaged images and therefore low-noise images are the base for a
multitude of techniques like for example differences.  The most
prominent method in this class is dark-frame subtraction.

   The defaults set `--wExposure=1.0' and `--wSaturation=0.2'.
Eliminating the saturation component with `--wSaturation=0.0' can be
worth an extra run.


File: enfuse.info,  Node: Exposure Series,  Next: Flash Exposure Series,  Prev: Repetition,  Up: Applications

7.3 Exposure Series - Dynamic Range Increase
============================================

*Main Purpose*:  Increase manageable dynamic range

An exposure series is a set of images taken with identical parameters
except for the exposure time.  Some cameras even provide special
functions to automate recording exposure series.  See the instruction
manual of your model for details.

   Enfuse's defaults, `--wExposure=1.0' and `--wSaturation=0.2' are
well suited for fusion of _color_ images.  Remember that saturation
weighting only works for RGB data.  Option `--wSaturation' helps
controlling burnt-out highlights as these are heavily desaturated.  If
no image suffers from troublesome highlights, the relative saturation
weight can be reduced and even be set to zero.  For black and white
images `--wEntropy' can be an alternative to `--wSaturation' because it
suppresses overexposed pixels as these contain little information.
However, entropy weighting is not limited to grayscale data.  It has
been successfully applied to RGB images, too.  Note that saturation
weighting considers _each_ color channel of an RGB image separately and
chooses the channel with the minimum entropy as representative for the
whole pixel.

   Enfuse offers the photographer tremendous flexibility on fusing
differenly exposed images.  Whether you combine only two pictures or a
series of 21, Enfuse imposes no limits on you.  Accordingly, the
photographic effects achieved range from subtle to surreal like the
late 1980s "Max Headroom" TV-Series to really unreal.  Like some time
ago in the chemical days of photography a new developer opened unseen
possibilities for artists, exposure fusion extends a photographer's
expressive space in the digital age.  Whether the results look good or
bad, whether the images are dull or exciting is entirely up the artist.

   In the next sections we give assistance to starters and rectify
several misconceptions about Enfuse.

* Menu:

* Exposure Series Tips::            Some hints for beginners
* Exposure Series Misconceptions::  What works despite the hype


File: enfuse.info,  Node: Exposure Series Tips,  Next: Exposure Series Misconceptions,  Up: Exposure Series

7.3.1 Tips For Beginners
------------------------

Here are some tips to get you in business quickly.

_Include the best single exposure._
     Include the exposure you would have taken if you did not use
     Enfuse in your series.  It gives you a solid starting point.
     Think of the other images as augmenting this best single exposure
     to bring out the light and dark features you would like to see.

_Begin with as little a number of images as possible._
     Pre-visualizing the results of Enfuse is difficult.  The more
     images enter the fusion process and the wider their EV-spacing is,
     the more challenging thinking of the output image becomes.
     Therefore, start off with as little images as possible.

     You can take a larger series of images and only use part of it.

_Start with a moderate EV-spacing._
     As has been pointed out in the previous item, a wide EV-spacing
     makes pre-visualization harder.  So set out with a spacing of
     2/3EV to 1+1/3EV.


File: enfuse.info,  Node: Exposure Series Misconceptions,  Prev: Exposure Series Tips,  Up: Exposure Series

7.3.2 Common Misconceptions
---------------------------

Here are some surprisingly common misconceptions about exposure series.

_A single image cannot be the source of an exposure series._
     Raw-files in particular lend themselves to be converted multiple
     times and the results being fused together.  The technique is
     simpler, faster, and usually even looks better than digital
     blending
     (http://luminous-landscape.com/tutorials/digital-blending.shtml)
     (as opposed to using a graduated neutral density filter) or
     blending exposures
     (http://www.gimpguru.org/Tutorials/BlendingExposures/) in an image
     manipulation program.  Moreover, perfect alignment comes free of
     charge!

_An exposure series must feature symmetric exposures._
     Twice wrong!  Neither do the exposures have to be "symmetric" like
     {0EV, -2/3EV, +2/3EV}, nor does the number of exposures have to be
     odd.  Series like {-1-1/3EV, -1/3EV, +1/3EV} or {-1EV, 1EV} might
     be just right.  By the way, the order in which the images were
     taken does not matter either.

_An exposure series must cover the whole dynamic range of the scene._
     Unless you do not want to cover the whole range, you do not have
     to.  Some HDR programs require the user to take a light probe,(1)
     whereas Enfuse offers the user complete freedom of exposure.

_All exposure values must be different._
     You can repeat any exposure as often as you like.  That way you
     combine and exposure series with parts of *note Repetition::,
     emphasizing the multiply occuring exposures and reducing noise.

   ---------- Footnotes ----------

   (1) Paul E. Debevec (http://www.debevec.org/) defines: "A "light
probe" image is an omnidirectional, high dynamic range image that
records the incident illumination conditions at a particular point in
space."


File: enfuse.info,  Node: Flash Exposure Series,  Next: Polarization Series,  Prev: Exposure Series,  Up: Applications

7.4 Flash Exposure Series - Directed Lighting
=============================================

*Main Purpose*:  ???

...


File: enfuse.info,  Node: Polarization Series,  Next: Focus Stacks,  Prev: Flash Exposure Series,  Up: Applications

7.5 Polarization Series - Saturation Enhancement
================================================

*Main Purpose*:  Reflection suppression, saturation enhancement

In the current implementation of Enfuse it is not possible in general
to fuse a polarization series.  Nai"vely abusing `--wSaturation' will
not work.


File: enfuse.info,  Node: Focus Stacks,  Prev: Polarization Series,  Up: Applications

7.6 Focus Stacks - Depth-of-Field Increase
==========================================

*Main Purpose*:  Synthetic Depth-of-Field Increase

A "focus stack" is a series of images where the distance of the focal
plane from the sensor varies.  Sloppily speaking, the images were
focussed at different distances.  Fusing such a stack increases the
depth-of-field (DOF) beyond the physical limits of diffraction.

* Menu:

* Why Focus Stacks::            Why take the hassle?
* Preparing Focus Stacks::      How to get suitable input images
* Contrast Based Fusing::       Fundamental command line options
* Basic Focus Stacking::        Simple, standard deviation method
* Advanced Focus Stacking::     Advanced, Laplacian technique
* Expert Stacking::             Tips for focus stacking experts


File: enfuse.info,  Node: Why Focus Stacks,  Next: Preparing Focus Stacks,  Up: Focus Stacks

7.6.1 Why create focus stacks?
------------------------------

Given

   * a fixed sensor or film size,

   * a lens' particular focal length, and

   * a notion about "sharpness", technically speaking the size of the
     circle-of-confusion (CoC)

the photographer controls the depth-of-field with the aperture.
Smaller apertures - this is larger aperture numbers - increase the DOF
and vice versa.  However, smaller apertures increase diffraction which
in turn renders the image unsharp.  So, there is an optimum aperture
where the photographer gets maximum DOF.  Sadly, for some purposes like
macro shots it is not enough.  One way out is to combine the sharp
parts of images focused at different distances, thereby artifically
increasing the total DOF.  This is exactly what Enfuse can do.

   All lenses have a so called "sweet spot" aperture, where their
resolution is best.  Taking pictures at this aperture the photographer
squeezes the maximum quality out of the lens.  But: the "sweet spot"
aperture often is only one or two stops away from wide open.  Wouldn't
it be great to be able combine these best-possible images to form one
high-quality, sufficient-DOF image?  Welcome to Enfuse's contrast
selection abilities.


File: enfuse.info,  Node: Preparing Focus Stacks,  Next: Contrast Based Fusing,  Prev: Why Focus Stacks,  Up: Focus Stacks

7.6.2 Preparing Focus Stacks
----------------------------

We are going to combine images with limited DOF to increase their
in-focus parts.  The whole process is about image sharpness.
Therefore, the input images must align very well, not just well, but
very well.  For optimum results the maximum controlpoint distance in
Hugin (*note Helpful Programs::) should not exceed 0.3-0.5pixels to
ensure perfect blending.

   As in all image fusion operations it is preferable to use 16bit
linear (gamma = 1) images throughout, but 8bit gamma encoded images
will do.  Naturally, high SNR input data always is welcome.


File: enfuse.info,  Node: Contrast Based Fusing,  Next: Basic Focus Stacking,  Prev: Preparing Focus Stacks,  Up: Focus Stacks

7.6.3 Contrast Based Fusing
---------------------------

A bare bones call to Enfuse for focus stacking could look like this.

     enfuse \
         --wExposure=0 \
         --wSaturation=0 \
         --wContrast=1 \
         --HardMask \
         ... \
         --output=output.tif \
         input-<0000-9999>.tif

Here is what the option cause.

`--wExposure=0'
     Switch *off* exposure based pixel selection.  The default weight
     is 1.

`--wSaturation=0'
     Switch *off* saturation based pixel selection.  The default weight
     is 0.2.

`--wContrast=1'
     Switch *on* pixel selection based on contrast.

`--HardMask'
     Select the best pixel from the image stack and ignore all others.
     Without this option Enfuse uses all pixels in the stack and weights
     them according to their respective quality, which in our case
     would be contrast.  Without `--HardMask' the result will always
     look a bit soft.  *Note Contrast Weighting::.

If you want to see some entertaining progress messages - contrast
weighting takes a while -, also pass the `-v' option for a verbose
progress report.


File: enfuse.info,  Node: Basic Focus Stacking,  Next: Advanced Focus Stacking,  Prev: Contrast Based Fusing,  Up: Focus Stacks

7.6.4 Basic Focus Stacking
--------------------------

For a large class of image stacks Enfuse's default algorithm, as
selected in *note Contrast Based Fusing::, to determine the sharpness
produces nice results.  The algorithm uses a moving square window, the
so called contrast window.  It computes the standard deviation of the
pixels inside of the window.  The program then selects the window's
center pixel of the image in the stack where the standard deviation is
largest, this is the local contrast reaches the maximum.

   However, the algorithm fails to deliver good masks for images which
exhibit high contrast edges on the scale of the contrast window size.
The typical artifacts that show up are

   * faint dark seams on the light side of the high contrast edges and

   * extremely soft, slighly lighter seams on the dark side of the high
     contrast edges,

where the distance of the seams from the middle of the edge is
comparable to the contrast window size.

   If your results do not show any of this artifacts, stick with the
basic algorithm.  Advanced focus stacking as described in the next
sections delivers superior results in case of artifacts, though
requires manually tuning several parameters.


File: enfuse.info,  Node: Advanced Focus Stacking,  Next: Expert Stacking,  Prev: Basic Focus Stacking,  Up: Focus Stacks

7.6.5 Advanced Focus Stacking
-----------------------------

If your fused image shows any of the defects described in the previous
section, you can try a more difficult to use algorithm that effectively
works around the seam artifacts.  It is described in the next section.

* Menu:

* Local Contrast Problem::        What is the problem Kenneth?
* Laplacian Edge Detection::      Using a Laplacian-of-Gaussian to detect edges
* Local Contrast Enhancement::    Boosting local contrast before weighting
* Suppressing Noise or Recognizing Faint Edges::  The best of both worlds
* Focus Stacking Decision Tree::  What to do and how to fuse


File: enfuse.info,  Node: Local Contrast Problem,  Next: Laplacian Edge Detection,  Up: Advanced Focus Stacking

7.6.5.1 A Detailed Look at the Problem
......................................

Let us use an example to illustrate the problem of relating the
sharpness with the local contrast variations.  Say we use a 5x5
contrast window.  Moreover, let `sharp_edge' and `smooth_edge' be two
specific configurations:

     sharp_edge =  #(    0,    0,  200,    0,    0;
                         0,  225,    0,    0,    0;
                         0,  255,    0,    0,    0;
                       215,    0,    0,    0,    0;
                       200,    0,    0,    0,    0)

     smooth_edge = #(    0,   62,  125,  187,  250;
                         1,   63,  126,  188,  251;
                         2,   65,  127,  190,  252;
                         3,   66,  128,  191,  253;
                         5,   67,  130,  192,  255)

   where `;' separates the rows and `,' separates the colons.  This is
in fact Tela (http://www.ava.fmi.fi/~pjanhune/tela/) syntax.

   Images *note Figure:sharp-edge:: and *note Figure:smooth-edge:: show
plots of the matrices `sharp_edge' and `smooth_edge'.

 [image src="sharp-edge.png" text="



                                                   sharp_edge ******
                                                          250 $$$$$$
                                                          200 %%%%%%
                                                          150 @@@@@@
                           ###                            100 &&&&&&
                        ###   #                            50 ======
                        ###    #
                        # ##    #
     300  ++           ###  #    #
     250  |+          ##     #    #
          |         #####     #    #
     200  |+       # # # #     #    #####
          |       #   #   #     # ##     ########
     100  |+    ##    # ##*#     ###########     ############
          |          # #   -#*    # ##      ########     ## |
      50  |+  ##     ##  -%%@**   ######    ##      #####   |
          | ##     ## -@%%@@&&**##      ########    ##      |
       0  #####    -#=&&&======####.    ##      ####----    |
          |    ####+==&@@@@%%@@&** ########.    ##.+    ---- 4
          |   --- ==&@@ .%%$$%@@&* ##      #####....     --+
          | -- ++=&&@ .%% %%@@& ==*###..   ##..     ..+ 3
          +---    =&.@%%%%@@&===..    #####.....    ---
        0  +  -----=&&&& ======....     .|      .. 2
                1   ==&&@@@@&& =   ......|.    ---
                        2 --@-&-=  +..   | ..- 1
                                3-----   |+--
                                       4- 0





" ]

Figure 7.1: 3D plot augmented by contour plot of the matrix
`sharp_edge'.

 [image src="smooth-edge.png" text="



                                                  smooth_edge ******
                                                          250 $$$$$$
                                                          200 %%%%%%
                                                          150 @@@@@@
                                                          100 &&&&&&
                                                           50 ======
                                                     ########
                                             ########    ## |
     300  ++                         ########   #########   |
     250  |+                  #######   #########   ##      |
          |                 ##   ########   ########        |
     200  |+             ########   ########    ##          |
          |           ####  ########   #########            |
     100  |+      ##########################                |
          |     #########  #########     |                  |
      50  |+  ##   #########     -==-----|                  |
          |#########  ---+..    ==.+   &&--------           |
       0  ##       ---      .===.... &&  |.+@@@  ---%%---   |
          |      --++...   ==.    &&&....@@@     .%%     -$$ 4
          |   ---       ===....&&&   ..@@|  ...%%%..    $$-+
          | -- ++.. ====.    && .....@@. |   %%     ..$ 3
          +---    ==.......&&   .. @@   .|.%%...    $$-
        0  +  ---=--     &&......@@     .%%     .$ 2
                1   ---&&- +.. @@  ...%%%|.    $$-
                        2 ---@@-   +%%   | ..$ 1
                                3--%--   |+$$
                                       4- 0





" ]

Figure 7.2: 3D plot augmented by contour plot of the matrix
`smooth_edge'.

Our intuition lets us "see" an extremely sharp edge in the first
matrix, whereas the second one describes an extraordinarily smooth
diagonal intensity ramp.  Which one will be selected?  Well,
`sharp_edge' has a standard deviation of 88.07 and `smooth_edge' has
88.41.  Thus, `smooth_edge' wins, contradicting our intuition and even
worse our intention!

   Sadly, configurations like `smooth_edge' occur more often with
high-quality, good bokeh
(http://www.luminous-landscape.com/essays/bokeh.shtml) lenses.  In fact
they are the very manifestation of "good bokeh".  Therefore, Laplacian
edge detection plays an important role when working with high-quality
lenses.


File: enfuse.info,  Node: Laplacian Edge Detection,  Next: Local Contrast Enhancement,  Prev: Local Contrast Problem,  Up: Advanced Focus Stacking

7.6.5.2 Laplacian Edge Detection
................................

Enfuse provides a Laplacian-based algorithm that can help in situations
where weighting based on the standard deviation fails.  It is activated
with a positive value for SCALE in `--EdgeScale'=SCALE.  The Laplacian
will detect two-dimensional _curvature_ on the scale of SCALE.  Here
and in the following we simply speak of "curvature" where we mean
"magnitude of curvature".  This is, we shall not distinguish between
convex and concave edges.  Enfuse always use the magnitude of curvature
for weighting.

   Typically, SCALE ranges between 0.1pixels and 0.5pixels, where
0.3pixels is a good starting point.  To find the best value for SCALE
though, usually some experimentation will be necessary.  Use
`--SaveMasks' to get all soft- (default: `mask%04i.tif') and hard-mask
files (default: `mask%04i_wta.tif').  Check how different scales affect
the artifacts.  Also *note Understanding Masks::.


File: enfuse.info,  Node: Local Contrast Enhancement,  Next: Suppressing Noise or Recognizing Faint Edges,  Prev: Laplacian Edge Detection,  Up: Advanced Focus Stacking

7.6.5.3 Local Contrast Enhancement
..................................

Sometimes Enfuse misses smoother edges with `--EdgeScale' and a little
local contrast enhancement (LCE) helps.  Set
`--EdgeScale'=SCALE:LCE-SCALE:LCE-FACTOR.  where LCE-SCALE and
LCE-FACTOR work like the unsharp mask
(http://www.cambridgeincolour.com/tutorials/unsharp-mask.htm) filters
in various image manipulation programs.  Start with LCE-SCALE ten times
the value of SCALE and a LCE-FACTOR of 2-5.

   LCE-SCALE can be specified as a percentage of SCALE.  LCE-FACTOR
also can be specified as a percentage.  Examples:

     --EdgeScale=0.3:3.0:3
     --EdgeScale=0.3:1000%:3.0
     --EdgeScale=0.3:3:300%
     --EdgeScale=0.3:1000%:300%

By default LCE is turned off.


File: enfuse.info,  Node: Suppressing Noise or Recognizing Faint Edges,  Next: Focus Stacking Decision Tree,  Prev: Local Contrast Enhancement,  Up: Advanced Focus Stacking

7.6.5.4 Suppressing Noise or Recognizing Faint Edges
....................................................

The Laplacian-based algorithm much better resists the seam problem than
the local-contrast algorithm, but it has two shortcomings:

  1. The Laplacian is very susceptible to noise and

  2. it fails to recognize faint edges.

The `--MinCurvature' option helps to mitigate both flaws.

   The argument to `--MinCurvature'=CURVATURE either is an absolute
lightness value, for example 0..255 for 8bit data and 0..65535 for
16bit data, or, when given with a `%'-sign it is a relative lightness
value ranging from 0% to 100%.

   To suppress unreal edges or counter excessive noise use the
`--MinCurvature' option with a _negative_ curvature measure CURVATURE.
This forces all curvatures less than -CURVATURE to zero.

   A _positive_ curvature measure CURVATURE makes Enfuse merge the LoG
data with the local-contrast data.  Every curvature larger or equal to
CURVATURE is left unchanged and every curvature less than CURVATURE
gets replaced by the rescaled local-contrast data such that the largest
local contrast is just below CURVATURE.  This combines the best parts
of both techniques and ensures a precise edge detection over the whole
range of edge curvatures.

*Summary*

`--EdgeScale=0.3'
     Use LoG to detect edges on a scale of 0.3pixels.  Apply the
     default grayscale projector: `average'.

`--EdgeScale=0.3 --GrayProjector=l-star'
     Use LoG to detect edges on a scale of 0.3pixels.  Apply the
     L*-grayscale projector.

`--EdgeScale=0.3:3:300%'
     Use LoG to detect edges on a scale of 0.3pixels, pre-sharpen the
     input images by 300% on a scale of 3pixels.  Apply the default
     grayscale projector: `average'.

`--EdgeScale=0.3 --MinCurvature=-0.5%'
     Use LoG to detect edges on a scale of 0.3pixels.  Apply the
     default grayscale projector: `average' and throw away all edges
     with a curvature of less than 0.5%.

`--EdgeScale=0.3 --MinCurvature=0.5% --ContrastWindowSize=7'
     Use LoG to detect edges on a scale of 0.3pixels.  Apply the
     default grayscale projector: `average' and throw away all edges
     with a curvature of less than 0.5% and replace the LoG data
     between 0% and 0.5% with SDev data.  Usa a window of 7x7pixel
     window to compute the SDev.


File: enfuse.info,  Node: Focus Stacking Decision Tree,  Prev: Suppressing Noise or Recognizing Faint Edges,  Up: Advanced Focus Stacking

7.6.5.5 Focus Stacking Decision Tree
....................................

Figure *note Figure:focus-stacking-decision-tree:: helps the user to
arrive at a well-fused focus stack with as little steps as possible.

 [image src="focus-stack-decision-tree.png" ]

Figure 7.3: Focus stacking decision tree.

   Always start with the default, contrast weighting with a local
contrast window.  Only if seams appear as described in *note Advanced
Focus Stacking:: switch to Laplacian-of-Gaussian contrast detection.

   If some seams remain even in LoG-mode, decrease the sensitivity of
the edge detection with a positive `--MinCurvature'.  A too high value
of `--MinCurvature' suppresses fine detail though.  Part of the detail
can be brought back with pre-sharpening, this is, *note Local Contrast
Enhancement:: or combining LoG with local-contrast-window mode by using
a negative `--MinCurvature'.

   Carefully examining the masks (option `--SaveMasks') that Enfuse
uses helps to judge the effects of the parameters.


File: enfuse.info,  Node: Expert Stacking,  Prev: Advanced Focus Stacking,  Up: Focus Stacks

7.6.6 Tips For Focus Stacking Experts
-------------------------------------

We have collected some advice of which even focus stacking adepts can
benefit.

   * Ensure that the sensor is clean.

     Aligning focus stacks requires varying the viewing angle, which
     corresponds to a changing focal length.  Hence, the same pixel on
     the sensor gets mapped onto different positions in the final
     image.  Dirt spots will occur not only once but as many times as
     there are images in the stack - something unfunny to correct in
     postprocessing.

     Along the same lines the photographer may want to consider to
     prepare dark frames before and possibly also after the shoot of
     the focus stack to subtract hot pixels before fusion.

   * Prefer a low-sensitivity setting on the camera to get low-noise
     images.

     Fusing with `--HardMask' does not average and thus does not
     suppress any noise in the input images.

   * If the transition of in-focus to out-of-focus areas is too abrupt,
     record the images with closest and farthest focusing distances
     twice: first with the intended working aperture and a second time
     with a small aperture (large aperture number).

     The small aperture will give the fused image a more natural
     in-focus to out-of-focus transition and the working-aperture shots
     supply the detail in the in-focus regions.


File: enfuse.info,  Node: Helpful Programs,  Next: Authors,  Prev: Applications,  Up: Top

8 Helpful Additional Programs
*****************************

Several programs and libraries have proven helpful when working with
Enfuse and Enblend.

*Raw Image Conversion*
        * DCRaw (http://www.cybercom.net/~dcoffin/dcraw/) is a
          universal raw-converter written by DAVID COFFIN.

        * UFRaw (http://ufraw.sourceforge.net/), a raw converter written
          by UDI FUCHS and based on DCRaw, adds a GUI (`ufraw'),
          versatile batch processing (`ufraw-batch'), and some
          additional features like, for example, cropping, noise
          reduction with wavelets, and automatic lens error correction.

*Image Alignment and Rendering*
        * ALE (http://auricle.dyndns.org/ALE/), DAVID HILVERT'S
          anti-lamenessing engine for the real die-hard command-line
          users aligns, filters, and renders images.

        * Hugin (http://hugin.sourceforge.net/) is a GUI that aligns
          and stitches images.

          It comes with several command line tools, like `nona' to
          stitch panorama images, `align_image_stack' to align
          overlapping images for HDR or create focus stacks, and
          `fulla' to correct lens errors.

        * PanoTools (http://panotools.sourceforge.net/) the successor of
          HELMUT DERSCH'S original PanoTools
          (http://www.all-in-one.ee/~dersch/) offers a set of
          command-line driven applications to create panoramas.  Most
          notable are `PTOptimizer' and `PTmender'.

*Image Manipulation*
        * CinePaint (http://www.cinepaint.org/) is a branch of an early
          Gimp forked off at version 1.0.4.  It sports much less
          features than the current Gimp, but offers 8bit, 16bit and
          32bit color channels, HDR (for example floating-point TIFF,
          and OpenEXR), and a tightly integrated color management
          system.

        * The Gimp (http://www.gimp.org/) is a general purpose image
          manipulation program.  At the time of this writing it is
          still limited to images with only 8bits per channel.

        * ImageMagick (http://www.imagemagick.org/) and its clone
          GraphicsMagick (http://www.graphicsmagick.org/) are general
          purpose command-line driven image manipulation programs, for
          example, `convert', `display', `identify', and `montage'.

*High Dynamic Range*
        * OpenEXR (http://www.openexr.com/) offers libraries and some
          programs to work with the EXR HDR format.

        * PFSTools (http://pfstools.sourceforge.net/) create, modify,
          and tonemap high-dynamic range images.

*Libraries*
        * LibJPEG (http://www.ijg.org/) is a library for handling the
          JPEG (JFIF) image format.

        * LibPNG (http://www.libpng.org/pub/png/libpng.html) is a
          library that handles the Portable Network Graphics (PNG)
          image format.

        * LibTIFF (http://www.remotesensing.org/libtiff/) offers a
          library and utility programs to manipulate the ubiquitous
          Tagged Image File Format, TIFF.

          The nifty `tiffinfo' command quickly inquires the properties
          of TIFF files.

*Meta-Data Handling*
        * EXIFTool (http://www.sno.phy.queensu.ca/~phil/exiftool/)
          reads and writes EXIF meta data.  In particular it copies
          meta data from one image to another.

        * LittleCMS (http://www.littlecms.com/) is the color management
          library used by Hugin, DCRaw, UFRaw, Enblend, and Enfuse.  It
          supplies some binaries, too.  `tifficc', an ICC color profile
          applier, is of particular interest.


File: enfuse.info,  Node: Authors,  Next: FDL,  Prev: Helpful Programs,  Up: Top

Appendix A Authors
******************

ANDREW MIHAL (<acmihal@users.sourceforge.net>) has written Enblend and
Enfuse.


*Contributors*

   * PABLO D'ANGELO (<dangelo@users.sourceforge.net>) added the
     contrast criteria.

   * JOE BEDA: Win32 porting.

   * MAX LYONS.

   * MARK aka mjz: Win32 porting.

   * CHRISTOPH SPIEL (<cspiel@users.sourceforge.net>) added the gray
     projectors, the LoG-based edge detection, an O(n)-algorithm for
     the calculation of local contrast, entropy weighting, and various
     other features.

   * BRENT TOWNSHEND: HDR support.


Thanks to SIMON ANDRIOT and PABLO JOUBERT for suggesting the
MERTENS-KAUTZ-VAN REETH technique and the name "Enfuse".


File: enfuse.info,  Node: FDL,  Next: List of Tables,  Prev: Authors,  Up: Top

Appendix B GNU Free Documentation License
*****************************************

Version 1.2, November 2002

     Copyright (C) 2000, 2001, 2002 Free Software Foundation, Inc.
     51 Franklin St, Fifth Floor, Boston, MA  02110-1301, USA

     Everyone is permitted to copy and distribute verbatim copies
     of this license document, but changing it is not allowed.

  0. PREAMBLE

     The purpose of this License is to make a manual, textbook, or other
     functional and useful document "free" in the sense of freedom: to
     assure everyone the effective freedom to copy and redistribute it,
     with or without modifying it, either commercially or
     noncommercially.  Secondarily, this License preserves for the
     author and publisher a way to get credit for their work, while not
     being considered responsible for modifications made by others.

     This License is a kind of "copyleft", which means that derivative
     works of the document must themselves be free in the same sense.
     It complements the GNU General Public License, which is a copyleft
     license designed for free software.

     We have designed this License in order to use it for manuals for
     free software, because free software needs free documentation: a
     free program should come with manuals providing the same freedoms
     that the software does.  But this License is not limited to
     software manuals; it can be used for any textual work, regardless
     of subject matter or whether it is published as a printed book.
     We recommend this License principally for works whose purpose is
     instruction or reference.

  1. APPLICABILITY AND DEFINITIONS

     This License applies to any manual or other work, in any medium,
     that contains a notice placed by the copyright holder saying it
     can be distributed under the terms of this License.  Such a notice
     grants a world-wide, royalty-free license, unlimited in duration,
     to use that work under the conditions stated herein.  The
     "Document", below, refers to any such manual or work.  Any member
     of the public is a licensee, and is addressed as "you".  You
     accept the license if you copy, modify or distribute the work in a
     way requiring permission under copyright law.

     A "Modified Version" of the Document means any work containing the
     Document or a portion of it, either copied verbatim, or with
     modifications and/or translated into another language.

     A "Secondary Section" is a named appendix or a front-matter section
     of the Document that deals exclusively with the relationship of the
     publishers or authors of the Document to the Document's overall
     subject (or to related matters) and contains nothing that could
     fall directly within that overall subject.  (Thus, if the Document
     is in part a textbook of mathematics, a Secondary Section may not
     explain any mathematics.)  The relationship could be a matter of
     historical connection with the subject or with related matters, or
     of legal, commercial, philosophical, ethical or political position
     regarding them.

     The "Invariant Sections" are certain Secondary Sections whose
     titles are designated, as being those of Invariant Sections, in
     the notice that says that the Document is released under this
     License.  If a section does not fit the above definition of
     Secondary then it is not allowed to be designated as Invariant.
     The Document may contain zero Invariant Sections.  If the Document
     does not identify any Invariant Sections then there are none.

     The "Cover Texts" are certain short passages of text that are
     listed, as Front-Cover Texts or Back-Cover Texts, in the notice
     that says that the Document is released under this License.  A
     Front-Cover Text may be at most 5 words, and a Back-Cover Text may
     be at most 25 words.

     A "Transparent" copy of the Document means a machine-readable copy,
     represented in a format whose specification is available to the
     general public, that is suitable for revising the document
     straightforwardly with generic text editors or (for images
     composed of pixels) generic paint programs or (for drawings) some
     widely available drawing editor, and that is suitable for input to
     text formatters or for automatic translation to a variety of
     formats suitable for input to text formatters.  A copy made in an
     otherwise Transparent file format whose markup, or absence of
     markup, has been arranged to thwart or discourage subsequent
     modification by readers is not Transparent.  An image format is
     not Transparent if used for any substantial amount of text.  A
     copy that is not "Transparent" is called "Opaque".

     Examples of suitable formats for Transparent copies include plain
     ASCII without markup, Texinfo input format, LaTeX input format,
     SGML or XML using a publicly available DTD, and
     standard-conforming simple HTML, PostScript or PDF designed for
     human modification.  Examples of transparent image formats include
     PNG, XCF and JPG.  Opaque formats include proprietary formats that
     can be read and edited only by proprietary word processors, SGML or
     XML for which the DTD and/or processing tools are not generally
     available, and the machine-generated HTML, PostScript or PDF
     produced by some word processors for output purposes only.

     The "Title Page" means, for a printed book, the title page itself,
     plus such following pages as are needed to hold, legibly, the
     material this License requires to appear in the title page.  For
     works in formats which do not have any title page as such, "Title
     Page" means the text near the most prominent appearance of the
     work's title, preceding the beginning of the body of the text.

     A section "Entitled XYZ" means a named subunit of the Document
     whose title either is precisely XYZ or contains XYZ in parentheses
     following text that translates XYZ in another language.  (Here XYZ
     stands for a specific section name mentioned below, such as
     "Acknowledgements", "Dedications", "Endorsements", or "History".)
     To "Preserve the Title" of such a section when you modify the
     Document means that it remains a section "Entitled XYZ" according
     to this definition.

     The Document may include Warranty Disclaimers next to the notice
     which states that this License applies to the Document.  These
     Warranty Disclaimers are considered to be included by reference in
     this License, but only as regards disclaiming warranties: any other
     implication that these Warranty Disclaimers may have is void and
     has no effect on the meaning of this License.

  2. VERBATIM COPYING

     You may copy and distribute the Document in any medium, either
     commercially or noncommercially, provided that this License, the
     copyright notices, and the license notice saying this License
     applies to the Document are reproduced in all copies, and that you
     add no other conditions whatsoever to those of this License.  You
     may not use technical measures to obstruct or control the reading
     or further copying of the copies you make or distribute.  However,
     you may accept compensation in exchange for copies.  If you
     distribute a large enough number of copies you must also follow
     the conditions in section 3.

     You may also lend copies, under the same conditions stated above,
     and you may publicly display copies.

  3. COPYING IN QUANTITY

     If you publish printed copies (or copies in media that commonly
     have printed covers) of the Document, numbering more than 100, and
     the Document's license notice requires Cover Texts, you must
     enclose the copies in covers that carry, clearly and legibly, all
     these Cover Texts: Front-Cover Texts on the front cover, and
     Back-Cover Texts on the back cover.  Both covers must also clearly
     and legibly identify you as the publisher of these copies.  The
     front cover must present the full title with all words of the
     title equally prominent and visible.  You may add other material
     on the covers in addition.  Copying with changes limited to the
     covers, as long as they preserve the title of the Document and
     satisfy these conditions, can be treated as verbatim copying in
     other respects.

     If the required texts for either cover are too voluminous to fit
     legibly, you should put the first ones listed (as many as fit
     reasonably) on the actual cover, and continue the rest onto
     adjacent pages.

     If you publish or distribute Opaque copies of the Document
     numbering more than 100, you must either include a
     machine-readable Transparent copy along with each Opaque copy, or
     state in or with each Opaque copy a computer-network location from
     which the general network-using public has access to download
     using public-standard network protocols a complete Transparent
     copy of the Document, free of added material.  If you use the
     latter option, you must take reasonably prudent steps, when you
     begin distribution of Opaque copies in quantity, to ensure that
     this Transparent copy will remain thus accessible at the stated
     location until at least one year after the last time you
     distribute an Opaque copy (directly or through your agents or
     retailers) of that edition to the public.

     It is requested, but not required, that you contact the authors of
     the Document well before redistributing any large number of
     copies, to give them a chance to provide you with an updated
     version of the Document.

  4. MODIFICATIONS

     You may copy and distribute a Modified Version of the Document
     under the conditions of sections 2 and 3 above, provided that you
     release the Modified Version under precisely this License, with
     the Modified Version filling the role of the Document, thus
     licensing distribution and modification of the Modified Version to
     whoever possesses a copy of it.  In addition, you must do these
     things in the Modified Version:

       A. Use in the Title Page (and on the covers, if any) a title
          distinct from that of the Document, and from those of
          previous versions (which should, if there were any, be listed
          in the History section of the Document).  You may use the
          same title as a previous version if the original publisher of
          that version gives permission.

       B. List on the Title Page, as authors, one or more persons or
          entities responsible for authorship of the modifications in
          the Modified Version, together with at least five of the
          principal authors of the Document (all of its principal
          authors, if it has fewer than five), unless they release you
          from this requirement.

       C. State on the Title page the name of the publisher of the
          Modified Version, as the publisher.

       D. Preserve all the copyright notices of the Document.

       E. Add an appropriate copyright notice for your modifications
          adjacent to the other copyright notices.

       F. Include, immediately after the copyright notices, a license
          notice giving the public permission to use the Modified
          Version under the terms of this License, in the form shown in
          the Addendum below.

       G. Preserve in that license notice the full lists of Invariant
          Sections and required Cover Texts given in the Document's
          license notice.

       H. Include an unaltered copy of this License.

       I. Preserve the section Entitled "History", Preserve its Title,
          and add to it an item stating at least the title, year, new
          authors, and publisher of the Modified Version as given on
          the Title Page.  If there is no section Entitled "History" in
          the Document, create one stating the title, year, authors,
          and publisher of the Document as given on its Title Page,
          then add an item describing the Modified Version as stated in
          the previous sentence.

       J. Preserve the network location, if any, given in the Document
          for public access to a Transparent copy of the Document, and
          likewise the network locations given in the Document for
          previous versions it was based on.  These may be placed in
          the "History" section.  You may omit a network location for a
          work that was published at least four years before the
          Document itself, or if the original publisher of the version
          it refers to gives permission.

       K. For any section Entitled "Acknowledgements" or "Dedications",
          Preserve the Title of the section, and preserve in the
          section all the substance and tone of each of the contributor
          acknowledgements and/or dedications given therein.

       L. Preserve all the Invariant Sections of the Document,
          unaltered in their text and in their titles.  Section numbers
          or the equivalent are not considered part of the section
          titles.

       M. Delete any section Entitled "Endorsements".  Such a section
          may not be included in the Modified Version.

       N. Do not retitle any existing section to be Entitled
          "Endorsements" or to conflict in title with any Invariant
          Section.

       O. Preserve any Warranty Disclaimers.

     If the Modified Version includes new front-matter sections or
     appendices that qualify as Secondary Sections and contain no
     material copied from the Document, you may at your option
     designate some or all of these sections as invariant.  To do this,
     add their titles to the list of Invariant Sections in the Modified
     Version's license notice.  These titles must be distinct from any
     other section titles.

     You may add a section Entitled "Endorsements", provided it contains
     nothing but endorsements of your Modified Version by various
     parties--for example, statements of peer review or that the text
     has been approved by an organization as the authoritative
     definition of a standard.

     You may add a passage of up to five words as a Front-Cover Text,
     and a passage of up to 25 words as a Back-Cover Text, to the end
     of the list of Cover Texts in the Modified Version.  Only one
     passage of Front-Cover Text and one of Back-Cover Text may be
     added by (or through arrangements made by) any one entity.  If the
     Document already includes a cover text for the same cover,
     previously added by you or by arrangement made by the same entity
     you are acting on behalf of, you may not add another; but you may
     replace the old one, on explicit permission from the previous
     publisher that added the old one.

     The author(s) and publisher(s) of the Document do not by this
     License give permission to use their names for publicity for or to
     assert or imply endorsement of any Modified Version.

  5. COMBINING DOCUMENTS

     You may combine the Document with other documents released under
     this License, under the terms defined in section 4 above for
     modified versions, provided that you include in the combination
     all of the Invariant Sections of all of the original documents,
     unmodified, and list them all as Invariant Sections of your
     combined work in its license notice, and that you preserve all
     their Warranty Disclaimers.

     The combined work need only contain one copy of this License, and
     multiple identical Invariant Sections may be replaced with a single
     copy.  If there are multiple Invariant Sections with the same name
     but different contents, make the title of each such section unique
     by adding at the end of it, in parentheses, the name of the
     original author or publisher of that section if known, or else a
     unique number.  Make the same adjustment to the section titles in
     the list of Invariant Sections in the license notice of the
     combined work.

     In the combination, you must combine any sections Entitled
     "History" in the various original documents, forming one section
     Entitled "History"; likewise combine any sections Entitled
     "Acknowledgements", and any sections Entitled "Dedications".  You
     must delete all sections Entitled "Endorsements."

  6. COLLECTIONS OF DOCUMENTS

     You may make a collection consisting of the Document and other
     documents released under this License, and replace the individual
     copies of this License in the various documents with a single copy
     that is included in the collection, provided that you follow the
     rules of this License for verbatim copying of each of the
     documents in all other respects.

     You may extract a single document from such a collection, and
     distribute it individually under this License, provided you insert
     a copy of this License into the extracted document, and follow this
     License in all other respects regarding verbatim copying of that
     document.

  7. AGGREGATION WITH INDEPENDENT WORKS

     A compilation of the Document or its derivatives with other
     separate and independent documents or works, in or on a volume of
     a storage or distribution medium, is called an "aggregate" if the
     copyright resulting from the compilation is not used to limit the
     legal rights of the compilation's users beyond what the individual
     works permit.  When the Document is included in an aggregate, this
     License does not apply to the other works in the aggregate which
     are not themselves derivative works of the Document.

     If the Cover Text requirement of section 3 is applicable to these
     copies of the Document, then if the Document is less than one half
     of the entire aggregate, the Document's Cover Texts may be placed
     on covers that bracket the Document within the aggregate, or the
     electronic equivalent of covers if the Document is in electronic
     form.  Otherwise they must appear on printed covers that bracket
     the whole aggregate.

  8. TRANSLATION

     Translation is considered a kind of modification, so you may
     distribute translations of the Document under the terms of section
     4.  Replacing Invariant Sections with translations requires special
     permission from their copyright holders, but you may include
     translations of some or all Invariant Sections in addition to the
     original versions of these Invariant Sections.  You may include a
     translation of this License, and all the license notices in the
     Document, and any Warranty Disclaimers, provided that you also
     include the original English version of this License and the
     original versions of those notices and disclaimers.  In case of a
     disagreement between the translation and the original version of
     this License or a notice or disclaimer, the original version will
     prevail.

     If a section in the Document is Entitled "Acknowledgements",
     "Dedications", or "History", the requirement (section 4) to
     Preserve its Title (section 1) will typically require changing the
     actual title.

  9. TERMINATION

     You may not copy, modify, sublicense, or distribute the Document
     except as expressly provided for under this License.  Any other
     attempt to copy, modify, sublicense or distribute the Document is
     void, and will automatically terminate your rights under this
     License.  However, parties who have received copies, or rights,
     from you under this License will not have their licenses
     terminated so long as such parties remain in full compliance.

 10. FUTURE REVISIONS OF THIS LICENSE

     The Free Software Foundation may publish new, revised versions of
     the GNU Free Documentation License from time to time.  Such new
     versions will be similar in spirit to the present version, but may
     differ in detail to address new problems or concerns.  See
     `http://www.gnu.org/copyleft/'.

     Each version of the License is given a distinguishing version
     number.  If the Document specifies that a particular numbered
     version of this License "or any later version" applies to it, you
     have the option of following the terms and conditions either of
     that specified version or of any later version that has been
     published (not as a draft) by the Free Software Foundation.  If
     the Document does not specify a version number of this License,
     you may choose any version ever published (not as a draft) by the
     Free Software Foundation.


File: enfuse.info,  Node: List of Tables,  Next: List of Figures,  Prev: FDL,  Up: Top

List of Tables
**************

* Menu:

* Table 1.1: Weighting criteria:         Table:weighting-criteria.
* Table 3.1: Mask template ...:          Table:mask-template-characters.
* Table 6.1: Suggested ...:              Table:cache-size-settings.


File: enfuse.info,  Node: List of Figures,  Next: Program Index,  Prev: List of Tables,  Up: Top

List of Figures
***************

* Menu:

* Figure 2.1: Photographic ...:          Figure:photographic-workflow.
* Figure 3.1: Entropy cutoff ...:        Figure:entropy-cutoff.
* Figure 4.1: Gaussian function:         Figure:gaussian.
* Figure 4.2: Local analysis window:     Figure:local-analysis-window.
* Figure 4.3: Laplacian-of-Gaussian:     Figure:laplacian-of-gaussian.
* Figure 4.4: Entropy function:          Figure:entropy.
* Figure 7.1: Sharp edge:                Figure:sharp-edge.
* Figure 7.2: Smooth edge:               Figure:smooth-edge.
* Figure 7.3: Focus stacking ...:        Figure:focus-stacking-decision-tree.


File: enfuse.info,  Node: Program Index,  Next: Option Index,  Prev: List of Figures,  Up: Top

Program Index
*************

 [index ]
* Menu:

* ale:                                   Helpful Programs.    (line  20)
* align_image_stack (Hugin):             Helpful Programs.    (line  27)
* cinepaint <1>:                         Helpful Programs.    (line  39)
* cinepaint:                             Extended Options.    (line 110)
* convert (ImageMagick):                 Helpful Programs.    (line  50)
* dcraw <1>:                             Helpful Programs.    (line  10)
* dcraw:                                 Workflow.            (line  17)
* display (ImageMagick):                 Helpful Programs.    (line  50)
* exiftool:                              Helpful Programs.    (line  78)
* exrdisplay (OpenEXR):                  Helpful Programs.    (line  56)
* fulla (Hugin):                         Helpful Programs.    (line  27)
* gimp <1>:                              Helpful Programs.    (line  46)
* gimp <2>:                              Extended Options.    (line 110)
* gimp:                                  Workflow.            (line  17)
* gm (GraphicsMagick):                   Helpful Programs.    (line  50)
* hugin <1>:                             Helpful Programs.    (line  24)
* hugin <2>:                             What Images.         (line  13)
* hugin <3>:                             Extended Options.    (line 122)
* hugin:                                 Workflow.            (line  17)
* identify (ImageMagick) <1>:            Helpful Programs.    (line  50)
* identify (ImageMagick):                Understanding Masks. (line  22)
* montage (ImageMagick):                 Helpful Programs.    (line  50)
* nona (Hugin) <1>:                      Helpful Programs.    (line  27)
* nona (Hugin):                          Extended Options.    (line 122)
* PanoTools:                             Workflow.            (line  17)
* pfshdrcalibrate (PFScalibration):      Helpful Programs.    (line  59)
* pfsin (PFSTools):                      Helpful Programs.    (line  59)
* pfsout (PFSTools):                     Helpful Programs.    (line  59)
* pfstmo_* (PFStmo):                     Helpful Programs.    (line  59)
* pfsview (PFSTools):                    Helpful Programs.    (line  59)
* PTmender (PanoTools):                  Helpful Programs.    (line  32)
* PTOptimizer (PanoTools):               Helpful Programs.    (line  32)
* tifficc (LittleCMS):                   Helpful Programs.    (line  82)
* tiffinfo (libtiff) <1>:                Helpful Programs.    (line  74)
* tiffinfo (libtiff):                    Understanding Masks. (line  22)
* ufraw <1>:                             Helpful Programs.    (line  13)
* ufraw:                                 Workflow.            (line  17)
* ufraw-batch:                           Helpful Programs.    (line  13)


File: enfuse.info,  Node: Option Index,  Next: General Index,  Prev: Program Index,  Up: Top

Option Index
************

 [index ]
* Menu:

* --compression:                         Common Options.      (line   9)
* --ContrastWindowSize:                  Expert Options.      (line  10)
* --depth:                               Extended Options.    (line  30)
* --EdgeScale:                           Expert Options.      (line  27)
* --EntropyCutoff:                       Expert Options.      (line  46)
* --EntropyWindowSize:                   Expert Options.      (line 111)
* --GrayProjector:                       Expert Options.      (line 124)
* --HardMask <1>:                        Expert Stacking.     (line  22)
* --HardMask <2>:                        Disabling Averaging. (line   6)
* --HardMask:                            Expert Options.      (line 179)
* --help:                                Common Options.      (line  46)
* --MinCurvature:                        Expert Options.      (line 191)
* --output:                              Common Options.      (line  59)
* --SaveMasks:                           Expert Options.      (line 210)
* --SoftMask:                            Expert Options.      (line 205)
* --verbose:                             Common Options.      (line  66)
* --version:                             Common Options.      (line  71)
* --wContrast:                           Fusion Options.      (line  10)
* --wEntropy:                            Fusion Options.      (line  15)
* --wExposure:                           Fusion Options.      (line  20)
* --wMu:                                 Fusion Options.      (line  26)
* --wSaturation:                         Fusion Options.      (line  33)
* --wSigma:                              Fusion Options.      (line  40)
* -b <1>:                                Tuning Memory Usage. (line   6)
* -b:                                    Extended Options.    (line  10)
* -c:                                    Extended Options.    (line  19)
* -d:                                    Extended Options.    (line  30)
* -f:                                    Extended Options.    (line 119)
* -g:                                    Extended Options.    (line 106)
* -h:                                    Common Options.      (line  46)
* -l:                                    Common Options.      (line  49)
* -m <1>:                                Tuning Memory Usage. (line   6)
* -m:                                    Extended Options.    (line 127)
* -o:                                    Common Options.      (line  59)
* -V:                                    Common Options.      (line  71)
* -v:                                    Common Options.      (line  66)
* -w:                                    Common Options.      (line  77)


File: enfuse.info,  Node: General Index,  Prev: Option Index,  Up: Top

General Index
*************

 [index ]
* Menu:

* 360o panorama:                         Common Options.      (line  77)
* advanced focus stacking:               Advanced Focus Stacking.
                                                              (line   6)
* advanced focus stacking, recognizing faint edges: Suppressing Noise or Recognizing Faint Edges.
                                                              (line   6)
* advanced focus stacking, suppressing noise: Suppressing Noise or Recognizing Faint Edges.
                                                              (line   6)
* affine transformation:                 Workflow.            (line  56)
* alpha channel <1>:                     Workflow.            (line  77)
* alpha channel:                         Overview.            (line  64)
* alpha channel, associated:             Extended Options.    (line 106)
* aperture, sweet spot:                  Why Focus Stacks.    (line  24)
* applications of enfuse:                Applications.        (line   6)
* authors, list of:                      Authors.             (line   6)
* average, disabling:                    Disabling Averaging. (line   6)
* average, weighted:                     Weighted Average.    (line   6)
* basic focus stacking:                  Basic Focus Stacking.
                                                              (line   6)
* binary mask:                           Understanding Masks. (line   6)
* bits per channel:                      Extended Options.    (line  30)
* blending exposures:                    Exposure Series Misconceptions.
                                                              (line   9)
* Burt-Adelson multiresolution spline:   Overview.            (line  21)
* channel width:                         Extended Options.    (line  30)
* channel, alpha:                        Overview.            (line  64)
* CIECAM02:                              Extended Options.    (line  19)
* circle-of-confusion:                   Why Focus Stacks.    (line  12)
* color appearance model:                Extended Options.    (line  19)
* compression:                           Common Options.      (line   9)
* compression, deflate:                  Common Options.      (line  23)
* compression, JPEG:                     Common Options.      (line  15)
* compression, LZW:                      Common Options.      (line  29)
* compression, packbits:                 Common Options.      (line  33)
* contrased-based fusing:                Contrast Based Fusing.
                                                              (line   6)
* contrast enhancement, local:           Local Contrast Enhancement.
                                                              (line   6)
* contrast weighting using a blend of methods: Blend SDev and LoG.
                                                              (line   6)
* contrast weighting using laplacian-of-gaussian: Laplacian of Gaussian.
                                                              (line   6)
* contrast weighting using standard deviation: Standard Deviation.
                                                              (line   6)
* conversion, L*a*b*:                    Expert Options.      (line 139)
* conversion, raw:                       Workflow.            (line  43)
* dark frame:                            Expert Stacking.     (line  18)
* decision tree, focus stacking:         Focus Stacking Decision Tree.
                                                              (line   6)
* deflate compression:                   Common Options.      (line  23)
* delimiters, option:                    Option Delimiters.   (line   6)
* depth-of-field:                        Why Focus Stacks.    (line  15)
* depth-of-focus increase:               Focus Stacks.        (line   6)
* digital blending:                      Exposure Series Misconceptions.
                                                              (line   9)
* disabling average:                     Disabling Averaging. (line   6)
* double precision float, IEEE754:       Extended Options.    (line  82)
* dynamic range increase <1>:            Flash Exposure Series.
                                                              (line   6)
* dynamic range increase:                Exposure Series.     (line   6)
* edge detection, laplacian:             Laplacian Edge Detection.
                                                              (line   6)
* ENBLEND_CACHE_IMAGES (preprocessor symbol): Tuning Memory Usage.
                                                              (line   8)
* entropy:                               Entropy Weighting.   (line  11)
* entropy, definition:                   Entropy Weighting.   (line   8)
* estimators:                            Standard Deviation.  (line  58)
* expectation value:                     Standard Deviation.  (line  42)
* expert focus stacking ttops:           Expert Stacking.     (line   6)
* exposure series:                       Exposure Series.     (line   6)
* exposure series, common misconceptions: Exposure Series Misconceptions.
                                                              (line   6)
* exposure series, tips for beginners:   Exposure Series Tips.
                                                              (line   6)
* filename template:                     Expert Options.      (line 213)
* flash exposure series:                 Flash Exposure Series.
                                                              (line   6)
* focus stacking decision tree:          Focus Stacking Decision Tree.
                                                              (line   6)
* focus stacking, advanced:              Advanced Focus Stacking.
                                                              (line   6)
* focus stacking, basic:                 Basic Focus Stacking.
                                                              (line   6)
* focus stacks:                          Focus Stacks.        (line   6)
* focus stacks, fusing:                  Contrast Based Fusing.
                                                              (line   6)
* focus stacks, preparation:             Preparing Focus Stacks.
                                                              (line   6)
* focus stacks, why create them:         Why Focus Stacks.    (line   6)
* free documentation license (FDL):      FDL.                 (line   6)
* fusing, contrased-based:               Contrast Based Fusing.
                                                              (line   6)
* general index:                         General Index.       (line   6)
* GNU free documentation license:        FDL.                 (line   6)
* gray projector:                        Expert Options.      (line 124)
* gray projector, average:               Expert Options.      (line 133)
* gray projector, channel-mixer:         Expert Options.      (line 165)
* gray projector, l-star:                Expert Options.      (line 139)
* gray projector, lightness:             Expert Options.      (line 149)
* gray projector, luminance:             Expert Options.      (line 159)
* gray projector, value:                 Expert Options.      (line 154)
* half precision float, OpenEXR:         Extended Options.    (line  97)
* helpful programs:                      Helpful Programs.    (line   6)
* hot pixels:                            Expert Stacking.     (line  18)
* IEEE754 double precision float:        Extended Options.    (line  82)
* IEEE754 single precision float:        Extended Options.    (line  73)
* image cache, block size:               Extended Options.    (line  10)
* image cache, cache size:               Extended Options.    (line 127)
* images, fusable:                       What Images.         (line   6)
* index, general:                        General Index.       (line   6)
* index, option:                         Option Index.        (line   6)
* index, program:                        Program Index.       (line   6)
* input mask:                            Understanding Masks. (line  18)
* invocation:                            Invocation.          (line   6)
* JPEG compression:                      Common Options.      (line  15)
* L*a*b* conversion:                     Expert Options.      (line 139)
* laplacian edge detection:              Laplacian Edge Detection.
                                                              (line   6)
* Laplacian of Gaussian (LoG):           Laplacian of Gaussian.
                                                              (line   6)
* lens distortion, correction of:        Workflow.            (line  56)
* levels, pyramid:                       Common Options.      (line  49)
* light probe:                           Exposure Series Misconceptions.
                                                              (line  28)
* local analysis window:                 Standard Deviation.  (line   6)
* local contrast enhancement:            Local Contrast Enhancement.
                                                              (line   6)
* local contrast problem:                Local Contrast Problem.
                                                              (line   6)
* LZW compression:                       Common Options.      (line  29)
* mask template character, %:            Expert Options.      (line 236)
* mask template character, B:            Expert Options.      (line 285)
* mask template character, b:            Expert Options.      (line 279)
* mask template character, D:            Expert Options.      (line 276)
* mask template character, d:            Expert Options.      (line 270)
* mask template character, E:            Expert Options.      (line 304)
* mask template character, e:            Expert Options.      (line 298)
* mask template character, F:            Expert Options.      (line 294)
* mask template character, f:            Expert Options.      (line 288)
* mask template character, i:            Expert Options.      (line 239)
* mask template character, n:            Expert Options.      (line 254)
* mask template character, P:            Expert Options.      (line 267)
* mask template character, p:            Expert Options.      (line 259)
* mask template characters, table of:    Expert Options.      (line 235)
* mask, binary:                          Understanding Masks. (line   6)
* mask, filename template:               Expert Options.      (line 213)
* mask, input files:                     Understanding Masks. (line  18)
* mask, saving:                          Expert Options.      (line 210)
* mask, weight:                          Understanding Masks. (line   6)
* masks, undestanding:                   Understanding Masks. (line   6)
* memory, tuning usage of:               Tuning Memory Usage. (line   6)
* Mertens-Kautz-Van Reeth exposure fusion: Overview.          (line   6)
* mode of operation (SDev, LoG, ...):    Scaling and Choice of Mode.
                                                              (line   6)
* natural sharp-unsharp transition:      Expert Stacking.     (line  33)
* noise reduction:                       Repetition.          (line   6)
* OpenEXR, data format:                  Extended Options.    (line  93)
* OpenEXR, half precision float:         Extended Options.    (line  97)
* option delimiters:                     Option Delimiters.   (line   6)
* option index:                          Option Index.        (line   6)
* options, common:                       Common Options.      (line   6)
* options, expert:                       Expert Options.      (line   6)
* options, extended:                     Extended Options.    (line   6)
* options, fusion:                       Fusion Options.      (line   6)
* output file compression:               Common Options.      (line   9)
* output image, set size of:             Extended Options.    (line 119)
* overview:                              Overview.            (line   6)
* packbits compression:                  Common Options.      (line  33)
* parallax error:                        Workflow.            (line  66)
* photometric alignment:                 Workflow.            (line  58)
* pixels, hot:                           Expert Stacking.     (line  18)
* polarization series:                   Polarization Series. (line   6)
* probability function:                  Standard Deviation.  (line  39)
* problem, local contrast:               Local Contrast Problem.
                                                              (line   6)
* program index:                         Program Index.       (line   6)
* programs, helpful additional:          Helpful Programs.    (line   6)
* pyramid levels:                        Common Options.      (line  49)
* raw conversion:                        Workflow.            (line  43)
* saturation enhancement:                Polarization Series. (line   6)
* scaling of parameters:                 Scaling and Choice of Mode.
                                                              (line   6)
* sensor, use of clean:                  Expert Stacking.     (line   9)
* series, exposure:                      Exposure Series.     (line   6)
* series, flash exposure:                Flash Exposure Series.
                                                              (line   6)
* series, polarization:                  Polarization Series. (line   6)
* series, simple:                        Repetition.          (line   6)
* simple series:                         Repetition.          (line   6)
* single precision float, IEEE754:       Extended Options.    (line  73)
* standard deviation:                    Standard Deviation.  (line  48)
* statistical moments:                   Standard Deviation.  (line  39)
* subtraction of dark frame:             Expert Stacking.     (line  18)
* sweet spot aperture:                   Why Focus Stacks.    (line  24)
* tips, focus stacking experts:          Expert Stacking.     (line   6)
* transformation, affine:                Workflow.            (line  56)
* transition, natural sharp-unsharp:     Expert Stacking.     (line  33)
* undestanding masks:                    Understanding Masks. (line   6)
* variance:                              Standard Deviation.  (line  45)
* weight mask:                           Understanding Masks. (line   6)
* weight, contrast:                      Fusion Options.      (line  10)
* weight, entropy:                       Fusion Options.      (line  15)
* weight, exposure:                      Fusion Options.      (line  20)
* weight, saturation:                    Fusion Options.      (line  33)
* weighted average:                      Weighted Average.    (line   6)
* weighting functions:                   Weighting Functions. (line   6)
* weighting, contrast <1>:               Contrast Weighting.  (line   6)
* weighting, contrast:                   Overview.            (line  39)
* weighting, contrast using a blend of methods: Blend SDev and LoG.
                                                              (line   6)
* weighting, contrast using laplacian-of-gaussian: Laplacian of Gaussian.
                                                              (line   6)
* weighting, contrast using standard deviation: Standard Deviation.
                                                              (line   6)
* weighting, entropy <1>:                Entropy Weighting.   (line   6)
* weighting, entropy:                    Overview.            (line  44)
* weighting, exposure <1>:               Exposure Weighting.  (line   6)
* weighting, exposure:                   Overview.            (line  30)
* weighting, general concept of:         Weighting Pixels.    (line   6)
* weighting, saturation <1>:             Saturation Weighting.
                                                              (line   6)
* weighting, saturation:                 Overview.            (line  35)
* window, local-analysis:                Standard Deviation.  (line   6)
* workflow:                              Workflow.            (line   6)
* workflow with Enblend:                 Workflow.            (line  17)
* workflow with Enfuse:                  Workflow.            (line  17)



Tag Table:
Node: Top731
Node: Overview4451
Ref: Table:weighting-criteria5638
Ref: Overview-Footnote-17753
Ref: Overview-Footnote-27922
Ref: Overview-Footnote-38103
Node: Workflow8285
Ref: Figure:photographic-workflow8797
Node: Invocation11541
Node: Common Options12083
Ref: Common Options-Footnote-114679
Node: Extended Options14870
Node: Fusion Options19741
Node: Expert Options21616
Ref: Figure:entropy-cutoff23998
Ref: Table:mask-template-characters32377
Node: Option Delimiters34460
Node: Weighting Functions35808
Node: Weighting Pixels36472
Node: Weighted Average37974
Node: Disabling Averaging38565
Node: Exposure Weighting39514
Ref: Figure:gaussian40992
Node: Saturation Weighting44282
Node: Contrast Weighting45378
Node: Standard Deviation46707
Ref: Figure:local-analysis-window47148
Ref: Standard Deviation-Footnote-149257
Node: Laplacian of Gaussian49406
Ref: Figure:laplacian-of-gaussian50945
Node: Blend SDev and LoG54409
Node: Scaling and Choice of Mode56040
Node: Entropy Weighting56882
Ref: Figure:entropy57847
Node: Understanding Masks61826
Node: Tuning Memory Usage65615
Ref: Table:cache-size-settings67728
Node: Applications68036
Node: What Images68758
Node: Repetition71921
Node: Exposure Series72978
Node: Exposure Series Tips75180
Node: Exposure Series Misconceptions76289
Ref: Exposure Series Misconceptions-Footnote-178057
Node: Flash Exposure Series78270
Node: Polarization Series78512
Node: Focus Stacks78946
Node: Why Focus Stacks79828
Node: Preparing Focus Stacks81155
Node: Contrast Based Fusing81895
Node: Basic Focus Stacking83142
Node: Advanced Focus Stacking84498
Node: Local Contrast Problem85262
Ref: Figure:sharp-edge86462
Ref: Figure:smooth-edge88061
Node: Laplacian Edge Detection90497
Node: Local Contrast Enhancement91612
Node: Suppressing Noise or Recognizing Faint Edges92528
Node: Focus Stacking Decision Tree95028
Ref: Figure:focus-stacking-decision-tree95383
Node: Expert Stacking96186
Node: Helpful Programs97685
Node: Authors101416
Node: FDL102195
Node: List of Tables123176
Node: List of Figures123515
Node: Program Index124249
Node: Option Index127172
Node: General Index130018

End Tag Table
