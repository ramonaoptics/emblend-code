\input texinfo
@c %** start of header
@setfilename enfuse-focus-stacking.info
@settitle Focus Stacking with Enfuse
@c %** end of header


@c
@c Summary Description and Copyright
@c

@ifinfo
This file describes how to use @command{enfuse} to produce so-called
focus-stacks of sets of aligned images.

Copyright @copyright{} 2008 Dr. Christoph L. Spiel
@end ifinfo


@c
@c Title Page and Copyright
@c
@titlepage
@sp 10
@center @titlefont{Focus Stacking with Enfuse}

@page
@vskip 0pt plus 1fill
Copyright @copyright{} 2008 Dr. Christoph L. Spiel
@end titlepage


@c
@c ``Top'' Node and Master Menu
@c

@ifinfo
@node Top, Focus stacks, (dir), (dir)
@top Focus Stacking with Enfuse

...
@end ifinfo

@menu
* Focus stacks::                Why create focus stacks?
* Preparing the Images::        What to look out for when praparing images for fusing
* Contrased-Based Fusing::      How to invoke @command{enfuse} when building a focus stack
* Getting Maximum Contrast::    How to get the most contrast out of your images
* Basic Usage::                 Focus stacking the quick and easy way
* Advanced Usage::              Focus stacking with difficult images
* Concept Index::               Index
@end menu


@c
@c Document Body
@c

@node Focus stacks, Preparing the Images, Top, Top
@section Why create focus stacks?

Given
@itemize @bullet
@item
a fixed sensor or film size,
@item
a particular focal length, and
@item
a notion about ``sharpness'', technically speaking the
circle-of-confusion (@acronym{CoC})
@end itemize
the photographer controls the depth-of-field (@acronym{DOF}) with the
aperture.  Smaller apertures -- this is larger aperture numbers --
increase the @acronym{DOF} and vice versa.  However, smaller apertures
increase diffraction which in turn renders the image unsharp.  So,
there is an optimum aperture where the photographer gets maximum
@acronym{DOF}.  Sadly, for some purposes like macro shots it is not
enough.  One way out is to combine the sharp parts of images focussed
at different distances thereby artifically increasing the total
@acronym{DOF}.  This is exactly what @command{enfuse} can do.

All lenses have a so called ''sweet spot'' aperture where their
resolution is best.  Taking pictures at this aperture gets the maximum
quality out of the lens.  But: the ''sweet spot'' aperture often is
only one or two stops away from wide open.  Wouldn't it be great to be
able combine these best-possible images to form one high-quality,
sufficient-@acronym{DOF} image?  Welcome to @command{enfuse}'s
contrast selection abilities.


@node Preparing the Images, Contrased-Based Fusing, Focus stacks, Top
@section Preparing the Images

We are going to combine images with limited @acronym{DOF} to increase
their in-focus parts.  The whole process is about image sharpness.
Therefore, the input images must align very well, not just well, but
very well.  For optimum results the maximum controlpoint distance in
Hugin should not exceed 0.3 to 0.5 pixels to ensure perfect blending.

As in all image fusion operations it is preferable to use 16-bit
linear (gamma = 1) images throughout, but 8-bit gamma encoded images
will do.  Naturally, high signal-to-noise ratio (@acronym{SNR}) input
data always is welcome.


@node Contrased-Based Fusing, Getting Maximum Contrast, Preparing the Images, Top
@section Contrased-Based Fusing

A bare bones call to Enfuse for focus stacking could look like this.

@example
enfuse \
    --wExposure=0 \
    --wSaturation=0 \
    --wContrast=1 \
    --HardMask \
    ... \
    -o output.tif \
    input-<0000-9999>.tif
@end example

@table @option
@item --wExposure=0
Switch off exposure based pixel selection.

@item --wSaturation=0
Switch off saturation based pixel selection.

@item --wContrast=1
Switch on pixel selection based on contrast.

@item --HardMask
Select the best pixel from the image stack and ignore all others.
Without this option Enfuse uses all pixels in the stack and weights
them according to their respective quality, which in our case would be
contrast.  Without @option{--HardMask} the result will always look a
bit soft.
@end table

If you want to see some entertaining progress messages, also pass the
@option{-v}-option ("verbose").


@node Getting Maximum Contrast, Basic Usage, Contrased-Based Fusing, Top
@section Getting Maximum Contrast

Enfuse converts every image to grayscale before it determines its
contrast.  Depending on the subject one of several grayscale
projectors may yield the best black-and-white contrast for image
fusion.  Therefore, Enfuse offers the user different conversion
operators to convert from the three color channels R, G, and B to a
luminance measure Y.

The @option{--GrayProjector} option has no influence on
black-and-white images.

@table @samp
@item average
Average red, green, and blue channel with equal weights.  This is the
default and it often is a good projector for @math{gamma = 1} data.
@example
        Y = (R + G + B) / 3
@end example

@item l-star
Use the L*-channel of the L*a*b*-conversion of the image as its
grayscale representation.  This is a useful projector for @math{gamma
= 1} data.  It reveals minute contrast variations even in the shadows
and the highlights.  This projector is computationally expensive.

@item lightness
Compute the lightness of each RGB-pixel as in an HSL-conversion of the
image.
@example
Y = (max(R, G, B) + min(R, G, B)) / 2
@end example

@item value
Take the Value-channel of the HSV-conversion of the image.
@example
Y = max(R, G, B)
@end example

@item luminance
Use the weighted average of the RGB pixel's channels as defined by
@acronym{CIE} and the @acronym{JPEG} standard.
@example
Y = 0.30 * R + 0.59 * G + 0.11 * B
@end example

@item channel-mixer:RedWeight:GreenWeight:BlueWeight
Weight the channels as given.
@example
Y = RedWeight * R + GreenWeight * G + BlueWeight * B
@end example
The weights are automatically normalized to one, so
@example
--GrayProjector=channel-mixer:0.25:0.5:0.25
--GrayProjector=channel-mixer:1:2:1
--GrayProjector=channel-mixer:25:50:25
@end example
all define the same mixer configuration.
@end table


@node Basic Usage, Advanced Usage, Getting Maximum Contrast, Top
@section Basic Usage -- Quick and Easy

For a large set of image stacks @command{enfuse}s default algorithm to
determine the sharpness produces nice results.  The algorithm uses a
moving square window, the so called contrast window.  It computes the
standard deviation of the pixels inside of the window.  The program
then selects the window's center pixel of the image in the stack where
the standard deviation is largest, this is the contrast is maximized.

@table @option
@item --ContrastWindowSize=5
    Specifiy the edge length of the square Enfuse uses to determine
    the local contrast.  The above option instructs Enfuse to look at
    the surrounding 24 pixels ("24-connectivity") of the center pixel
    when selecting the most contrasty proximity.

    Given an even size Enfuse will always choose the next larger odd
    number for the edge length.  Sizes 5, 7, 9, and 11 are good
    starting values for ContrastWindowSize.  Larger values increase
    the computational burden.
@end table

The algorithm fails to deliver good masks for images which exhibit
high contrast edges on the scale of the contrast window size.  The
typical artifacts that show up are
@itemize @bullet
@item
faint dark seams on the light side of the high contrast edges and
@item
extremely soft, slighly lighter seams on the dark side of the high
contrast edges,
@end itemize
where the distance of the seams from the middle of the edge is
comparable to the same as the contrast window size.

If your fused image shows any of these defects you can try a more
difficult to use algorithm that effecticely works around the seam
artifacts.  It is described in the next section.


@node Advanced Usage,  , Basic Usage, Top
@section Advanced Usage

@menu
* Detailed Look at the Problem::  
* Combine --EdgeScale::         
* Local Contrast Enhancement::  
* Suppressing Noise or Recognizing Faint Edges::  
* Understanding Mask Files::    
@end menu


@node Detailed Look at the Problem, Combine --EdgeScale, Advanced Usage, Advanced Usage
@subsection Detailed Look at the Problem

Here is an example to illustrate the problem of relating the sharpness
with the local contrast variations.  Say we use a 5x5 contrast window.
Let @samp{sharp_edge} and @samp{smooth_edge} be two specific
configurations.

@example
    sharp_edge =  #(    0,    0,  200,    0,    0;
                        0,  225,    0,    0,    0;
                        0,  255,    0,    0,    0;
                      215,    0,    0,    0,    0;
                      200,    0,    0,    0,    0)
@end example

@example
    smooth_edge = #(    0,   62,  125,  187,  250;
                        1,   63,  126,  188,  251;
                        2,   65,  127,  190,  252;
                        3,   66,  128,  191,  253;
                        5,   67,  130,  192,  255)
@end example

Our intuition lets us ''see'' an extremely sharp edge in the first
matrix, whereas the second one describes an extraordinarily smooth
diagonal intensity ramp.  Which one will be selected?  Well,
@samp{sharp_edge} has a standard deviation of 88.071335 and
@samp{smooth_edge} has 88.406190.  So smooth_edge wins contradicting
out intuition and even worse our intention!


@node Combine --EdgeScale, Local Contrast Enhancement, Detailed Look at the Problem, Advanced Usage
@subsection Combine --EdgeScale, --MinGradient, and --ContrastWindowSize

@command{enfuse} provides a Laplacian-based algorithm that can help in
situations like this.  It is activated with a positive value for
EdgeDetectScale in the option
@option{--EdgeScale}=@var{EdgeDetectScale} The Laplacian detects
curvature on the scale of @option{EdgeDetectScale}.  Typically
@option{EdgeDetectScale} will range between 0.1 and 0.5, where 0.3 is
a good starting point.

To find the best value for EdgeDetectScale some experimentation will
be necessary.  If necessary, use the @option{--debug}-option to get
all @file{mask####.tif} and @file{mask####_wta.tif} files (See next
subsection for an explanation of their use.) and check them for
artifacts.

Here and in the following we simply speak of ''curvature'' where we
mean ''magnitude of curvature''.  This is, we shall not distinguish
between convex and concave edges.


@node Local Contrast Enhancement, Suppressing Noise or Recognizing Faint Edges, Combine --EdgeScale, Advanced Usage
@subsection Local Contrast Enhancement

Sometimes Enfuse misses smoother edges with --EdgeScale and a little
Local Contrast Enhancement (@acronym{LCE}) helps:
@option{--EdgeScale}=@var{EdgeDetectScale}:@var{LCE-Scale}:@var{LCE-Factor}
where @var{LCE-Scale} and @var{LCE-Factor} work like the Unsharp Mask
filters in various image manipulation programs.  To start use for
@var{LCE-Scale} ten times the value of @var{EdgeDetectScale} and use
an @var{LCE-Factor} of 2 to 5.

@var{LCE-Scale} can be specified as a percentage of @var{EdgeDetectScale}.
@var{LCE-Factor} can be specified as a pertentage.  Examples:
@example
    --EdgeScale=0.3:3.0:3
    --EdgeScale=0.3:1000%:3.0
    --EdgeScale=0.3:3:300%
    --EdgeScale=0.3:1000%:300%
@end example
By default LCE is turned off.


@node Suppressing Noise or Recognizing Faint Edges, Understanding Mask Files, Local Contrast Enhancement, Advanced Usage
@subsection Suppressing Noise or Recognizing Faint Edgesa

The Laplacian-based algorithm resists much better the seam problem
than the local-contrast algorithm, but it has two shortcomings:
@enumerate
@item
The Laplacian is very susceptible to noise.
@item
It fails to recognize faint edges.
@end enumerate
The @option{--MinCurvature} option helps to mitigate both flaws.

The argument to @option{--MinCurvature} either is an absolute lightness value
(0..255 for 8-bit data and 0..65535 for 16-bit data) or, when given
with a @samp{%}-sign it is a relative lightness value (0%..100%).

To suppress unreal edges or counter excessive noise use the
@option{--MinCurvature} option with a @emph{negative} curvature measure
@var{C}.  This forces all curvatures less than -@var{C} to zero.
@option{--EdgeScale} is @emph{not} used.

A @emph{positive} curvature measure @var{C} makes @command{enfuse}
merge the @acronym{LoG} data with the local-contrast data.  Every
curvature larger or equal to @var{C} is left unchanged and every
curvature less than @var{C} gets replaced by the rescaled
local-contrast data such that the largest local contrast is just below
@var{C}.  This combines the best parts of both techniques and ensures
a precise edge detection over the whole range of edge curvatures.


@node Understanding Mask Files,  , Suppressing Noise or Recognizing Faint Edges, Advanced Usage
@subsection Understanding Mask Files

mask####.tif and mask####_wta.tif files

@example
    convert -normalize mask0000.tif | display -
@end example


@c
@c End of Document
@c

@node Concept Index,  , Top, Top
@unnumbered Concept Index

@printindex cp

@contents
@bye
